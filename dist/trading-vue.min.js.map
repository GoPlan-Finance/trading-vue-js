{"version":3,"sources":["webpack://TradingVueJs/webpack/universalModuleDefinition","webpack://TradingVueJs/webpack/bootstrap","webpack://TradingVueJs/./node_modules/@vue/runtime-core/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://TradingVueJs/./node_modules/@vue/runtime-dom/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://TradingVueJs/./node_modules/@vue/reactivity/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/createClass.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://TradingVueJs/./node_modules/@babel/runtime/regenerator/index.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/typeof.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/inherits.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://TradingVueJs/(webpack)/buildin/global.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://TradingVueJs/./node_modules/arrayslicer/lib/index.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://TradingVueJs/./node_modules/vue/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://TradingVueJs/./node_modules/lz-string/libs/lz-string.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://TradingVueJs/./node_modules/arrayslicer/lib/util.js","webpack://TradingVueJs/./node_modules/arrayslicer/lib/compare/index.js","webpack://TradingVueJs/./node_modules/arrayslicer/lib/search/binary.js","webpack://TradingVueJs/./node_modules/regenerator-runtime/runtime.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://TradingVueJs/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://TradingVueJs/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://TradingVueJs/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://TradingVueJs/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://TradingVueJs/./src/TradingVue.vue","webpack://TradingVueJs/./src/stuff/utils.js","webpack://TradingVueJs/./src/TradingVue.vue?45c9","webpack://TradingVueJs/./src/stuff/constants.js","webpack://TradingVueJs/./src/helpers/script_ww_api.js","webpack://TradingVueJs/./src/helpers/dataset.js","webpack://TradingVueJs/./src/helpers/dc_core.js","webpack://TradingVueJs/./src/helpers/dc_events.js","webpack://TradingVueJs/./src/helpers/agg_tool.js","webpack://TradingVueJs/./src/helpers/datacube.js","webpack://TradingVueJs/./src/helpers/sett_proxy.js","webpack://TradingVueJs/./src/stuff/mouse.js","webpack://TradingVueJs/./src/mixins/overlay.js","webpack://TradingVueJs/./src/stuff/keys.js","webpack://TradingVueJs/./src/mixins/tool.js","webpack://TradingVueJs/./src/mixins/interface.js","webpack://TradingVueJs/./src/components/primitives/candle.js","webpack://TradingVueJs/./src/components/primitives/volbar.js","webpack://TradingVueJs/./src/stuff/math.js","webpack://TradingVueJs/./src/components/primitives/line.js","webpack://TradingVueJs/./src/components/primitives/pin.js","webpack://TradingVueJs/./src/components/primitives/price.js","webpack://TradingVueJs/./src/components/primitives/ray.js","webpack://TradingVueJs/./src/components/primitives/seg.js","webpack://TradingVueJs/./src/components/js/layout_cnv.js","webpack://TradingVueJs/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","makeMap","str","expectsLowerCase","map","list","split","length","val","toLowerCase","isGloballyWhitelisted","normalizeStyle","isArray","res","item","normalized","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","arr","el","indexOf","splice","hasOwn","Array","isMap","toTypeString","isSet","isFunction","isPromise","then","catch","objectToString","toString","toRawType","slice","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","global","specialBooleanAttrs","isSpecialBooleanAttr","isHTMLTag","isSVGTag","looseEqual","a","b","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","keys","aHasKey","bHasKey","String","looseIndexOf","findIndex","Date","isSymbol","isIntegerKey","parseInt","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","writable","protoProps","staticProps","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_typeof","iterator","constructor","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","error","done","Promise","this","args","arguments","apply","err","undefined","subClass","superClass","assertThisInitialized","g","Function","e","ReferenceError","util","cmp","bin","IndexedArray","data","index","isSortableArrayLike","Error","setBoundaries","compare","minv","numcmp","strcmp","search","valpos","cursor","nextlow","nexthigh","setCompare","setSearch","sort","maxv","fetch","pos","found","prev","next","result","getRange","begin","end","start","finish","arrayWithHoles","iterableToArrayLimit","nonIterableRest","len","arr2","arrayLikeToArray","minLen","from","LZString","f","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","compressToBase64","input","_compress","decompressFromBase64","_decompress","compressToUTF16","decompressFromUTF16","compressed","charCodeAt","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","push","join","compressToEncodedURIComponent","decompressFromEncodedURIComponent","bitsPerChar","getCharFromInt","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","Math","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","position","_setPrototypeOf","iter","isFinite","floor","isArrayLike","isSortable","loop","min","max","curr","diff","runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","pop","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","_arr","_n","_d","_e","_s","_i","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","options","_isEffect","isEffect","raw","effect","active","scheduler","includes","trackStack","shouldTrack","resetTracking","id","uid","allowRecurse","deps","createReactiveEffect","lazy","onStop","delete","pauseTracking","last","track","depsMap","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","effectsToAdd","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","toRaw","createSetter","shallowSet","hadKey","Number","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","toReactive","toReadonly","toShallow","v","get$1","isShallow","rawTarget","rawKey","has$1","size","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","isKeyOnly","innerIterator","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isReactive","isProxy","Boolean","__v_isRef","callWithErrorHandling","handleError","callWithAsyncErrorHandling","throwInDev","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","nextTick","queueJob","job","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","getId","Infinity","currentRenderingInstance","filterSingleRoot","children","singleRoot","child","isVNode","Comment","normalizeSuspenseSlot","normalizeVNode","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","currentScopeId","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","setCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onMounted","onUpdated","onBeforeUnmount","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","cleanup","forceTrigger","_shallow","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransition","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","slots","getCurrentInstance","prevTransitionKey","default","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","subTree","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","clone","isKeepAlive","cloneVNode","shapeFlag","component","ssContent","transition","ssFallback","keepComment","keyedFragmentCount","Fragment","patchFlag","concat","__isKeepAlive","RegExp","matches","pattern","some","resetShapeFlag","getInnerChild","createAppContext","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","mixins","components","directives","provides","invokeVNodeHook","prevVNode","NULL_DYNAMIC_COMPONENT","Text","blockStack","currentBlock","openBlock","disableTracking","closeBlock","createBlock","dynamicProps","createVNode","dynamicChildren","__v_isVNode","n1","n2","InternalObjectKey","normalizeKey","normalizeRef","ref","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","class","klass","style","__isSuspense","isSuspense","__isTeleport","isTeleport","scopeId","dirs","anchor","targetAnchor","staticCount","content","fallback","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","toMerge","existing","incoming","mergeProps","createTextVNode","text","flag","slot","_c","slotFlag","_ctx","isInBeforeCreate","mergeOptions","to","strats","extends","extendsOptions","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","attrs","$slots","$refs","refs","$parent","$root","$emit","emit","$options","__VUE_OPTIONS_API__","__merged","globalMixins","resolveMergedOptions","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","ctx","setupState","accessCache","normalizedProps","propsOptions","publicGetter","cssModule","__cssModules","unscopables","getComponentName","Component","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insert","insertBefore","parentNode","removeChild","createElement","tag","isSVG","is","createElementNS","createText","createTextNode","createComment","setText","node","nodeValue","setElementText","textContent","nextSibling","querySelector","selector","setAttribute","cloneNode","temp","innerHTML","first","firstChild","importantRE","setStyle","setProperty","prefixed","rawName","cached","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","now","createEvent","timeStamp","cachedNow","addEventListener","event","handler","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","match","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","Transition","propsOrChildren","h","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","NumberOf","enter","leave","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","toMs","body","offsetHeight","patchProp","prevChildren","parentComponent","parentSuspense","unmountChildren","transitionClasses","className","patchClass","removeAttribute","patchStyle","tagName","shouldSetAsProp","_value","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","HOUR","MINUTE","DAY","MONTH","WEEK","YEAR","ChartConfig","SBMIN","SBMAX","TOOLBAR","TB_ICON","TB_ITEM_M","TB_ICON_BRI","TB_ICON_HOLD","TB_BORDER","TB_B_STYLE","TOOL_COLL","EXPAND","CANDLEW","GRIDX","GRIDY","BOTBAR","PANHEIGHT","DEFAULT_LEN","MINIMUM_LEN","MIN_ZOOM","MAX_ZOOM","VOLSCALE","UX_OPACITY","ZOOM_MODE","L_BTN_SIZE","L_BTN_MARGIN","SCROLL_WHEEL","SECOND","MINUTE5","MINUTE15","MINUTE30","HOUR4","MONTHMAP","TIMESCALES","$SCALES","map_unit","IB_TF_WARN","clamp","num","add_zero","day_start","setUTCHours","month_start","date","UTC","getFullYear","getMonth","year_start","get_year","getUTCFullYear","get_month","getUTCMonth","nearest_a","x","array","dist","xi","abs","round","decimals","toFixed","strip","number","toPrecision","get_day","getDate","overwrite","new_arr","copy_layout","new_obj","k","detect_interval","ohlcv","Const","get_num_id","fast_filter","t1","t2","ia","fast_filter_i","i1","i2","fast_nearest","pause","delay","rs","rj","smart_wheel","delta","log","sign","get_deltaX","originalEvent","deltaX","get_deltaY","deltaY","apply_opacity","op","parse_tf","smth","index_shift","sub","second","j","measureText","tv_id","measureTextOrg","width","getElementById","base","top","appendChild","font","innerText","offsetWidth","uuid","random","uuid2","warn","is_scr_props_upd","find","$uuid","settings","delayed_exec","script","execInterval","dt","$last_exec","format_name","ov","reg","xmode","is_mobile","default_prevented","original","defaultPrevented","navigator","maxTouchPoints","msMaxTouchPoints","DocumentTouch","WebWork","dc","tasks","onevent","worker","terminate","URL","webkitURL","blob","lz","worker_data","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","append","getBlob","Worker","createObjectURL","onmessage","sett","node_url","socket","WebSocket","JSON","parse","msg_queue","msg","tx_keys","send_node","tx_objs","postMessage","start_socket","readyState","shift","send","stringify","Utils","just","Dataset","desc","ww","proto","exec","del","dss","ds","nids","pids","types","main","chart","DCCore","tv","init_data","update_ids","get_by_query","on_settings","on_ids_changed","watcher","onchart","offchart","datasets","range","tf","check","loader","loading","prom","chunk_loaded","last_chunk","merge","range_changed","count","gldc","dcgl","grids","gid","rgid","grid","ri","candle","interval_ms","t_next","agg","update_overlays","tick","volume","nc","scroll_to","query","chuck","tuple","chart_as_piv","query_search","on","off","locked","field","side","path","r1","r2","ts_overlap","od","d1","d2","combine","arr1","ts","a1","a2","id11","id12","id21","id22","dst","src","point","last_t","upd_t","auto_scroll","last_candle","tl","controllers","ctrl","_data_uploading","make_tx","send_meta_2_ww","on_overlay_data","on_overlay_update","se_state","modify_overlay","post_ww","register_tools","exec_script","exec_all_scripts","data_changed","system_tool","tool","drawing_mode_off","grid_mousedown","change_settings","scripts_onrange","on_scroll_lock","object_selected","before_destroy","scripts","changed","rem","tools","preset","icon","Icons","mod","use_for","merge_presets","mods","mp","get_overlay","output","set_loading","execOnRange","upd","fields","data_change_exec","shiftMode","drawingMode","$set","build_tool","showTheTip","shift_measure","shiftKey","grid_id","legend","$selected","$state","selected","add_trash_icon","remove_trash_icon","scrollLock","q","$synth","get_one","new_ovs","fast_merge","destroy","layer_id","dcid","AggTool","int","symbols","st_id","sym","old","isds","refine","out","update_ds","DataCube","aggregation","script_depth","ww_ram_limit","SettProxy","overlay","merge_ts","merge_objects","$delete","update_candle","update_tick","display","set_loader","Mouse","comp","listeners","pressed","y","y$","dir","layout","layerX","layerY","screen2t","screen2$","emits","mounted","draw","meta_info","renderer","z","data_colors","y_range","mouse","init_tool","init","beforeUnmount","methods","custom_event","last_ux_id","uxs_count","calc","watch_uuid","render","Keys","keymap","collisions","pins","show_pins","drag","drag_update","start_drag","preventDefault","mousedown","remove_tool","render_pins","set_state","re_init","pre_draw","rec_position","dy","update_from","y$1","computed","_$emit","close","ux","modify","uxr","CandleExt","green","body_color","colorCandleUp","colorCandleDw","wick_color","colorWickUp","colorWickDw","hw","max_h","x05","strokeStyle","beginPath","moveTo","lineTo","stroke","fillStyle","fillRect","VolbarExt","$p","y0","height","x2","x1","colorVolUp","colorVolDw","point2line","p1","p2","p3","tri","area","tri_h","point2seg","proj","dot_prod","l1","l2","point2ray","dx","sqrt","v1","v2","exp","log_mid","log_hi","gx","re_range","hi2","mid","log_hi1","log_lo1","log_hi2","log_$","W","Line","T","t2screen","y1","$2screen","y2","ray","make","Math2","Pin","params","RADIUS","PIN_RADIUS","RADIUS_SQ","COLOR_BACK","colors","back","COLOR_BR","hidden","mousemove","mouseup","moved","draw_circle","lw","lineWidth","arc","PI","fill","force","on_settled","hover","Price","last_bar","bar","canvas","lbl","price","prec","color","textHL","textAlign","fillText","shader","meta","init_shader","red","setLineDash","cndl","c_magnet","Ray","Seg","layout_cnv","candles","vs","new_interval","interval2","ratio","px_step2","px_step","splitter","A","B","layout_vol","dim","_i1","_i2","volscale","ti_map","ib","interval","primitives","Candle","Volbar","TradingVue","install","Vue","use","TradingVueLib","Overlay","Constants","Tool","Interface"],"mappings":"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","file":"trading-vue.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TradingVueJs\"] = factory();\n\telse\n\t\troot[\"TradingVueJs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"regenerator-runtime\");\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","/**\n * Indexed Array Binary Search module\n */\n\n/**\n * Dependencies\n */\nvar util = require(\"./util\"),\n    cmp = require(\"./compare\"),\n    bin = require(\"./search/binary\");\n\n/**\n * Module interface definition\n */\nmodule.exports = IndexedArray;\n\n/**\n * Indexed Array constructor\n *\n * It loads the array data, defines the index field and the comparison function\n * to be used.\n *\n * @param {Array} data is an array of objects\n * @param {String} index is the object's property used to search the array\n */\nfunction IndexedArray(data, index) {\n\n    // is data sortable array or array-like object?\n    if (!util.isSortableArrayLike(data))\n        throw new Error(\"Invalid data\");\n\n    // is index a valid property?\n    if (!index || data.length > 0 && !(index in data[0]))\n        throw new Error(\"Invalid index\");\n\n    // data array\n    this.data = data;\n\n    // name of the index property\n    this.index = index;\n\n    // set index boundary values\n    this.setBoundaries();\n\n    // default comparison function\n    this.compare = typeof this.minv === \"number\" ? cmp.numcmp : cmp.strcmp;\n\n    // default search function\n    this.search = bin.search;\n\n    // cache of index values to array positions\n    // each value stores an object as { found: true|false, index: array-index }\n    this.valpos = {};\n\n    // cursor and adjacent positions\n    this.cursor = null;\n    this.nextlow = null;\n    this.nexthigh = null;\n}\n\n/**\n * Set the comparison function\n *\n * @param {Function} fn to compare index values that returnes 1, 0, -1\n */\nIndexedArray.prototype.setCompare = function (fn) {\n    if (typeof fn !== \"function\")\n        throw new Error(\"Invalid argument\");\n\n    this.compare = fn;\n    return this;\n};\n\n/**\n * Set the search function\n *\n * @param {Function} fn to search index values in the array of objects\n */\nIndexedArray.prototype.setSearch = function (fn) {\n    if (typeof fn !== \"function\")\n        throw new Error(\"Invalid argument\");\n\n    this.search = fn;\n    return this;\n};\n\n/**\n * Sort the data array by its index property\n */\nIndexedArray.prototype.sort = function () {\n    var self = this,\n        index = this.index;\n\n    // sort the array\n    this.data.sort(function (a, b) {\n        return self.compare(a[index], b[index]);\n    });\n\n    // recalculate boundary values\n    this.setBoundaries();\n\n    return this;\n};\n\n/**\n * Inspect and set the boundaries of the internal data array\n */\nIndexedArray.prototype.setBoundaries = function () {\n    var data = this.data,\n        index = this.index;\n\n    this.minv = data.length && data[0][index];\n    this.maxv = data.length && data[data.length - 1][index];\n\n    return this;\n};\n\n/**\n * Get the position of the object corresponding to the given index\n *\n * @param {Number|String} index is the id of the requested object\n * @returns {Number} the position of the object in the array\n */\nIndexedArray.prototype.fetch = function (value) {\n    // check data has objects\n    if (this.data.length === 0) {\n        this.cursor = null;\n        this.nextlow = null;\n        this.nexthigh = null;\n        return this;\n    }\n\n    // check the request is within range\n    if (this.compare(value, this.minv) === -1) {\n        this.cursor = null;\n        this.nextlow = null;\n        this.nexthigh = 0;\n        return this;\n    }\n    if (this.compare(value, this.maxv) === 1) {\n        this.cursor = null;\n        this.nextlow = this.data.length - 1;\n        this.nexthigh = null;\n        return this;\n    }\n\n    var valpos = this.valpos,\n        pos = valpos[value];\n\n    // if the request is memorized, just give it back\n    if (pos) {\n        if (pos.found) {\n            this.cursor = pos.index;\n            this.nextlow = null;\n            this.nexthigh = null;\n        } else {\n            this.cursor = null;\n            this.nextlow = pos.prev;\n            this.nexthigh = pos.next;\n        }\n        return this;\n    }\n\n    // if not, do the search\n    var result = this.search.call(this, value);\n    this.cursor = result.index;\n    this.nextlow = result.prev;\n    this.nexthigh = result.next;\n    return this;\n};\n\n/**\n * Get the object corresponding to the given index\n *\n * When no value is given, the function will default to the last fetched item.\n *\n * @param {Number|String} [optional] index is the id of the requested object\n * @returns {Object} the found object or null\n */\nIndexedArray.prototype.get = function (value) {\n    if (value)\n        this.fetch(value);\n\n    var pos = this.cursor;\n    return pos !== null ? this.data[pos] : null;\n};\n\n/**\n * Get an slice of the data array\n *\n * Boundaries have to be in order.\n *\n * @param {Number|String} begin index is the id of the requested object\n * @param {Number|String} end index is the id of the requested object\n * @returns {Object} the slice of data array or []\n */\nIndexedArray.prototype.getRange = function (begin, end) {\n    // check if boundaries are in order\n    if (this.compare(begin, end) === 1) {\n        return [];\n    }\n\n    // fetch start and default to the next index above\n    this.fetch(begin);\n    var start = this.cursor || this.nexthigh;\n\n    // fetch finish and default to the next index below\n    this.fetch(end);\n    var finish = this.cursor || this.nextlow;\n\n    // if any boundary is not set, return no range\n    if (start === null || finish === null) {\n        return [];\n    }\n\n    // return range\n    return this.data.slice(start, finish + 1);\n};\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Utils module\n */\n\n/**\n * Check if an object is an array-like object\n *\n * @credit Javascript: The Definitive Guide, O'Reilly, 2011\n */\nfunction isArrayLike(o) {\n    if (o &&                                 // o is not null, undefined, etc.\n        typeof o === \"object\" &&             // o is an object\n        isFinite(o.length) &&                // o.length is a finite number\n        o.length >= 0 &&                     // o.length is non-negative\n        o.length === Math.floor(o.length) && // o.length is an integer\n        o.length < 4294967296)               // o.length < 2^32\n        return true;                         // Then o is array-like\n    else\n        return false;                        // Otherwise it is not\n}\n\n/**\n * Check for the existence of the sort function in the object\n */\nfunction isSortable(o) {\n    if (o &&                                 // o is not null, undefined, etc.\n        typeof o === \"object\" &&             // o is an object\n        typeof o.sort === \"function\")        // o.sort is a function\n        return true;                         // Then o is array-like\n    else\n        return false;                        // Otherwise it is not\n}\n\n/**\n * Check for sortable-array-like objects\n */\nmodule.exports.isSortableArrayLike = function (o) {\n    return isArrayLike(o) && isSortable(o);\n};\n","/**\n * Utility compare functions\n */\n\nmodule.exports = {\n\n    /**\n     * Compare two numbers.\n     *\n     * @param {Number} a\n     * @param {Number} b\n     * @returns {Number} 1 if a > b, 0 if a = b, -1 if a < b\n     */\n    numcmp: function (a, b) {\n        return a - b;\n    },\n\n    /**\n     * Compare two strings.\n     *\n     * @param {Number|String} a\n     * @param {Number|String} b\n     * @returns {Number} 1 if a > b, 0 if a = b, -1 if a < b\n     */\n    strcmp: function (a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n\n};\n","/**\n * Binary search implementation\n */\n\n/**\n * Main search recursive function\n */\nfunction loop(data, min, max, index, valpos) {\n\n    // set current position as the middle point between min and max\n    var curr = (max + min) >>> 1;\n\n    // compare current index value with the one we are looking for\n    var diff = this.compare(data[curr][this.index], index);\n\n    // found?\n    if (!diff) {\n        return valpos[index] = {\n            \"found\": true,\n            \"index\": curr,\n            \"prev\": null,\n            \"next\": null\n        };\n    }\n\n    // no more positions available?\n    if (min >= max) {\n        return valpos[index] = {\n            \"found\": false,\n            \"index\": null,\n            \"prev\": (diff < 0) ? max : max - 1,\n            \"next\": (diff < 0) ? max + 1 : max\n        };\n    }\n\n    // continue looking for index in one of the remaining array halves\n    // current position can be skept as index is not there...\n    if (diff > 0)\n        return loop.call(this, data, min, curr - 1, index, valpos);\n    else\n        return loop.call(this, data, curr + 1, max, index, valpos);\n}\n\n/**\n * Search bootstrap\n * The function has to be executed in the context of the IndexedArray object\n */\nfunction search(index) {\n    var data = this.data;\n    return loop.call(this, data, 0, data.length - 1, index, this.valpos);\n}\n\n/**\n * Export search function\n */\nmodule.exports.search = search;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `depdendency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') && result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => i && (i.proxy ? i.proxy : getPublicInstance(i.parent));\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.5\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (transition && value !== oldValue) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<template>\n<div>\nasdfasdfasdfaf\n</div>\n</template>\n<script>\nexport default {\n    name: 'Spinner',\n    props: ['colors']\n}\n</script>\n","\nimport IndexedArray from 'arrayslicer'\nimport Const from './constants.js'\n\nexport default {\n\n    clamp(num, min, max) {\n        return num <= min ? min : num >= max ? max : num\n    },\n\n    add_zero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i\n    },\n\n    // Start of the day (zero millisecond)\n    day_start(t) {\n        let start = new Date(t)\n        return start.setUTCHours(0,0,0,0)\n    },\n\n    // Start of the month\n    month_start(t) {\n        let date = new Date(t)\n        return Date.UTC(\n            date.getFullYear(),\n            date.getMonth(), 1\n        )\n    },\n\n    // Start of the year\n    year_start(t) {\n        return Date.UTC(new Date(t).getFullYear())\n    },\n\n    get_year(t) {\n        if (!t) return undefined\n        return new Date(t).getUTCFullYear()\n    },\n\n    get_month(t) {\n        if (!t) return undefined\n        return new Date(t).getUTCMonth()\n    },\n\n    // Nearest in array\n    nearest_a(x, array) {\n        let dist = Infinity\n        let val = null\n        let index = -1\n        for (var i = 0; i < array.length; i++) {\n            var xi = array[i]\n            if (Math.abs(xi - x) < dist) {\n                dist = Math.abs(xi - x)\n                val = xi\n                index = i\n            }\n        }\n        return [index, val]\n    },\n\n    round(num, decimals = 8) {\n        return parseFloat(num.toFixed(decimals))\n    },\n\n    // Strip? No, it's ugly floats in js\n    strip(number) {\n        return parseFloat(\n            parseFloat(number).toPrecision(12)\n        )\n    },\n\n    get_day(t) {\n        return t ? new Date(t).getDate() : null\n    },\n\n    // Update array keeping the same reference\n    overwrite(arr, new_arr) {\n        arr.splice(0, arr.length, ...new_arr)\n    },\n\n    // Copy layout in reactive way\n    copy_layout(obj, new_obj) {\n        for (var k in obj) {\n            if (Array.isArray(obj[k])) {\n                // (some offchart indicators are added/removed)\n                // we need to update layout in a reactive way\n                if (obj[k].length !== new_obj[k].length) {\n                    this.overwrite(obj[k], new_obj[k])\n                    continue\n                }\n                for (var m in obj[k]) {\n                    Object.assign(obj[k][m], new_obj[k][m])\n                }\n            } else {\n                Object.assign(obj[k], new_obj[k])\n            }\n        }\n    },\n\n    // Detects candles interval\n    detect_interval(ohlcv) {\n        let len = Math.min(ohlcv.length - 1, 99)\n        let min = Infinity\n        ohlcv.slice(0, len).forEach((x, i) => {\n            let d = ohlcv[i+1][0] - x[0]\n            if (d === d && d < min) min = d\n        })\n        // This saves monthly chart from being awkward\n        if (min >= Const.MONTH && min <= Const.DAY * 30) {\n            return Const.DAY * 31\n        }\n        return min\n    },\n\n    // Gets numberic part of overlay id (e.g 'EMA_1' = > 1)\n    get_num_id(id) {\n        return parseInt(id.split('_').pop())\n    },\n\n    // Fast filter. Really fast, like 10X\n    fast_filter(arr, t1, t2) {\n        if (!arr.length) return [arr, undefined]\n        try {\n            let ia = new IndexedArray(arr, \"0\")\n            let res = ia.getRange(t1, t2)\n            let i0 = ia.valpos[t1].next\n            return [res, i0]\n        } catch(e) {\n            // Something wrong with fancy slice lib\n            // Fast fix: fallback to filter\n            return [arr.filter(x =>\n                x[0] >= t1 && x[0] <= t2\n            ), 0]\n        }\n    },\n\n    // Fast filter (index-based)\n    fast_filter_i(arr, t1, t2) {\n        if (!arr.length) return [arr, undefined]\n        let i1 =  Math.floor(t1)\n        if (i1 < 0) i1 = 0\n        let i2 =  Math.floor(t2 + 1)\n        let res = arr.slice(i1, i2)\n        return [res, i1]\n    },\n\n    // Nearest indexes (left and right)\n    fast_nearest(arr, t1) {\n        let ia = new IndexedArray(arr, \"0\")\n        ia.fetch(t1)\n        return [ia.nextlow, ia.nexthigh]\n    },\n\n    now() { return (new Date()).getTime() },\n\n    pause(delay) {\n        return new Promise((rs, rj) => setTimeout(rs, delay))\n    },\n\n    // Limit crazy wheel delta values\n    smart_wheel(delta) {\n        let abs = Math.abs(delta)\n        if (abs > 500) {\n            return (200 + Math.log(abs)) * Math.sign(delta)\n        }\n        return delta\n    },\n\n    // Parse the original mouse event to find deltaX\n    get_deltaX(event) {\n        return event.originalEvent.deltaX / 12\n    },\n\n    // Parse the original mouse event to find deltaY\n    get_deltaY(event) {\n        return event.originalEvent.deltaY / 12\n    },\n\n    // Apply opacity to a hex color\n    apply_opacity(c, op) {\n        if (c.length === 7) {\n            let n = Math.floor(op * 255)\n            n = this.clamp(n, 0, 255)\n            c += n.toString(16)\n        }\n        return c\n    },\n\n    // Parse timeframe or return value in ms\n    parse_tf(smth) {\n        if (typeof smth === 'string') {\n            return Const.map_unit[smth]\n        } else {\n            return smth\n        }\n    },\n\n    // Detect index shift between the main data sub\n    // and the overlay's sub (for IB-mode)\n    index_shift(sub, data) {\n\n        // Find the second timestamp (by value)\n        if (!data.length) return 0\n        let first = data[0][0]\n        let second\n\n        for (var i = 1; i < data.length; i++) {\n            if (data[i][0] !== first) {\n                second = data[i][0]\n                break\n            }\n        }\n\n        for (var j = 0; j < sub.length; j++) {\n            if (sub[j][0] === second) {\n                return j - i\n            }\n        }\n\n        return 0\n    },\n\n    // Fallback fix for Brave browser\n    // https://github.com/brave/brave-browser/issues/1738\n    measureText(ctx, text, tv_id) {\n        let m = ctx.measureTextOrg(text)\n        if (m.width === 0) {\n            const doc = document\n            const id = 'tvjs-measure-text'\n            let el = doc.getElementById(id)\n            if (!el) {\n                let base = doc.getElementById(tv_id)\n                el = doc.createElement(\"div\")\n                el.id = id\n                el.style.position = 'absolute'\n                el.style.top = '-1000px'\n                base.appendChild(el)\n            }\n            if(ctx.font) el.style.font = ctx.font\n            el.innerText = text.replace(/ /g, '.');\n            return { width: el.offsetWidth }\n        } else {\n            return m\n        }\n    },\n\n    uuid(temp = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx') {\n        return temp\n            .replace(/[xy]/g, c => {\n            var r = Math.random() * 16 | 0, v = c == 'x' ?\n                r :\n                (r & 0x3 | 0x8)\n            return v.toString(16)\n        })\n    },\n\n    uuid2() {\n        return this.uuid('xxxxxxxxxxxx')\n    },\n\n    // Delayed warning, f = condition lambda fn\n    warn(f, text, delay = 0) {\n        setTimeout(() => {\n            if (f()) console.warn(text)\n        }, delay)\n    },\n\n    // Checks if script props updated\n    // (and not style settings or something else)\n    is_scr_props_upd(n, prev) {\n        let p = prev.find(x => x.v.$uuid === n.v.$uuid)\n        if (!p) return false\n\n        let props = n.p.settings.$props\n        if (!props) return false\n\n        return props.some(x => n.v[x] !== p.v[x])\n    },\n\n    // Checks if it's time to make a script update\n    // (based on execInterval in ms)\n    delayed_exec(v) {\n        if (!v.script || !v.script.execInterval)\n            return true\n        let t = this.now()\n        let dt = v.script.execInterval\n        if (!v.settings.$last_exec ||\n            t > v.settings.$last_exec + dt) {\n            v.settings.$last_exec = t\n            return true\n        }\n        return false\n    },\n\n    // Format names such 'RSI, $length', where\n    // length - is one of the settings\n    format_name(ov) {\n        if (!ov.name) return undefined\n\n        let name = ov.name\n\n        for (var k in ov.settings || {}) {\n            let val = ov.settings[k]\n            let reg = new RegExp(`\\\\$${k}`, 'g')\n            name = name.replace(reg, val)\n        }\n\n        return name\n    },\n\n    // Default cursor mode\n    xmode() {\n        return this.is_mobile ? 'explore' : 'default'\n    },\n\n    default_prevented(event) {\n        if (event.original) {\n            return event.original.defaultPrevented\n        }\n        return event.defaultPrevented\n    },\n\n    // WTF with modern web development\n    is_mobile: (w => 'onorientationchange' in w &&\n       (!!navigator.maxTouchPoints ||\n        !!navigator.msMaxTouchPoints ||\n        ('ontouchstart' in w ||\n        (w.DocumentTouch &&\n        document instanceof w.DocumentTouch))))\n        (typeof window !== 'undefined' ? window : {})\n\n}\n","import { render } from \"./TradingVue.vue?vue&type=template&id=0322baa3\"\nimport script from \"./TradingVue.vue?vue&type=script&lang=js\"\nexport * from \"./TradingVue.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","\r\nconst SECOND = 1000\r\nconst MINUTE = SECOND * 60\r\nconst MINUTE3 = MINUTE * 3\r\nconst MINUTE5 = MINUTE * 5\r\nconst MINUTE15 = MINUTE * 15\r\nconst MINUTE30 = MINUTE * 30\r\nconst HOUR = MINUTE * 60\r\nconst HOUR4 = HOUR * 4\r\nconst HOUR12 = HOUR * 12\r\nconst DAY = HOUR * 24\r\nconst WEEK = DAY * 7\r\nconst MONTH = WEEK * 4\r\nconst YEAR = DAY * 365\r\n\r\nconst MONTHMAP = [\r\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n    \"May\", \"Jun\",\"Jul\", \"Aug\",\r\n    \"Sep\", \"Oct\",\"Nov\", \"Dec\"\r\n]\r\n\r\n// Grid time steps\r\nconst TIMESCALES = [\r\n    YEAR * 10, YEAR * 5, YEAR * 3, YEAR * 2, YEAR,\r\n    MONTH * 6, MONTH * 4, MONTH * 3, MONTH * 2, MONTH,\r\n    DAY * 15, DAY * 10, DAY * 7, DAY * 5, DAY * 3, DAY * 2, DAY,\r\n    HOUR * 12, HOUR * 6, HOUR * 3, HOUR * 1.5, HOUR,\r\n    MINUTE30, MINUTE15, MINUTE * 10, MINUTE5, MINUTE * 2, MINUTE\r\n]\r\n\r\n// Grid $ steps\r\nconst $SCALES = [0.05, 0.1, 0.2, 0.25, 0.5, 0.8, 1, 2, 5]\r\n\r\nconst ChartConfig = {\r\n    SBMIN: 60,       // Minimal sidebar px\r\n    SBMAX: Infinity, // Max sidebar, px\r\n    TOOLBAR: 57,     // Toolbar width px\r\n    TB_ICON: 25,     // Toolbar icon size px\r\n    TB_ITEM_M: 6,    // Toolbar item margin px\r\n    TB_ICON_BRI: 1,  // Toolbar icon brightness\r\n    TB_ICON_HOLD: 420, // ms, wait to expand\r\n    TB_BORDER: 1,    // Toolbar border px\r\n    TB_B_STYLE: 'dotted', // Toolbar border style\r\n    TOOL_COLL: 7,    // Tool collision threshold\r\n    EXPAND: 0.15,    // %/100 of range\r\n    CANDLEW: 0.6,    // %/100 of step\r\n    GRIDX: 100,      // px\r\n    GRIDY: 47,       // px\r\n    BOTBAR: 28,      // px\r\n    PANHEIGHT: 22,   // px\r\n    DEFAULT_LEN: 50, // candles\r\n    MINIMUM_LEN: 5,  // candles,\r\n    MIN_ZOOM: 25,    // candles\r\n    MAX_ZOOM: 1000,  // candles,\r\n    VOLSCALE: 0.15,  // %/100 of height\r\n    UX_OPACITY: 0.9, // Ux background opacity\r\n    ZOOM_MODE: 'tv', // 'tv' or 'tl'\r\n    L_BTN_SIZE: 21,  // Legend Button size, px\r\n    L_BTN_MARGIN: '-6px 0 -6px 0', // css margin\r\n    SCROLL_WHEEL: 'prevent', // 'pass', 'click'\r\n}\r\n\r\nChartConfig.FONT =\r\n    `11px -apple-system,BlinkMacSystemFont,\r\n    Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,\r\n    Fira Sans,Droid Sans,Helvetica Neue,\r\n    sans-serif`\r\n\r\nconst IB_TF_WARN =\r\n    `When using IB mode you should specify ` +\r\n    `timeframe ('tf' filed in 'chart' object),` +\r\n    `otherwise you can get an unexpected behaviour`\r\n\r\nconst MAP_UNIT = {\r\n  \"1s\": SECOND,\r\n  \"5s\": SECOND * 5,\r\n  \"10s\": SECOND * 10,\r\n  \"20s\": SECOND * 20,\r\n  \"30s\": SECOND * 30,\r\n  \"1m\": MINUTE,\r\n  \"3m\": MINUTE3,\r\n  \"5m\": MINUTE5,\r\n  \"15m\": MINUTE15,\r\n  \"30m\": MINUTE30,\r\n  \"1H\": HOUR,\r\n  \"2H\": HOUR * 2,\r\n  \"3H\": HOUR * 3,\r\n  \"4H\": HOUR4,\r\n  \"12H\": HOUR12,\r\n  \"1D\": DAY,\r\n  \"1W\": WEEK,\r\n  \"1M\": MONTH,\r\n  \"1Y\": YEAR\r\n}\r\n\r\nexport default {\r\n    SECOND: SECOND,\r\n    MINUTE: MINUTE,\r\n    MINUTE5: MINUTE5,\r\n    MINUTE15: MINUTE15,\r\n    MINUTE30: MINUTE30,\r\n    HOUR: HOUR,\r\n    HOUR4: HOUR4,\r\n    DAY: DAY,\r\n    WEEK: WEEK,\r\n    MONTH: MONTH,\r\n    YEAR: YEAR,\r\n    MONTHMAP: MONTHMAP,\r\n    TIMESCALES: TIMESCALES,\r\n    $SCALES: $SCALES,\r\n    ChartConfig: ChartConfig,\r\n    map_unit: MAP_UNIT,\r\n    IB_TF_WARN\r\n}\r\n","\n// Webworker interface\n\n// Compiled webworker (see webpack/ww_plugin.js)\nimport worker_data from './tmp/ww$$$.json'\nimport Utils from '../stuff/utils.js'\nimport lz from 'lz-string'\nimport {} from './script_ww.js' // For webworker-loader to find the ww\n\nclass WebWork {\n\n    constructor(dc) {\n        this.dc = dc\n        this.tasks = {}\n        this.onevent = () => {}\n        this.start()\n    }\n\n    start() {\n        if (this.worker) this.worker.terminate()\n        // URL.createObjectURL\n        window.URL = window.URL || window.webkitURL\n        let data = lz.decompressFromBase64(worker_data[0])\n        var blob\n        try {\n            blob = new Blob([data], {type: 'application/javascript'})\n        } catch (e) {\n            // Backwards-compatibility\n            window.BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder\n            blob = new BlobBuilder()\n            blob.append(data)\n            blob = blob.getBlob()\n        }\n        this.worker = new Worker(URL.createObjectURL(blob))\n        this.worker.onmessage = e => this.onmessage(e)\n    }\n\n    start_socket() {\n        if (!this.dc.sett.node_url) return\n        this.socket = new WebSocket(this.dc.sett.node_url)\n        this.socket.addEventListener('message', e => {\n            this.onmessage({data: JSON.parse(e.data)})\n        })\n        this.msg_queue = []\n    }\n\n    send(msg, tx_keys) {\n        if (this.dc.sett.node_url) {\n            return this.send_node(msg, tx_keys)\n        }\n        if (tx_keys) {\n            let tx_objs = tx_keys.map(k => msg.data[k])\n            this.worker.postMessage(msg, tx_objs)\n        } else {\n            this.worker.postMessage(msg)\n        }\n    }\n\n    // Send to node.js via websocket\n    send_node(msg, tx_keys) {\n        if (!this.socket) this.start_socket()\n        if (this.socket && this.socket.readyState) {\n            // Send the old messages first\n            while(this.msg_queue.length) {\n                let m = this.msg_queue.shift()\n                this.socket.send(JSON.stringify(m))\n            }\n            this.socket.send(JSON.stringify(msg))\n        } else {\n            this.msg_queue.push(msg)\n        }\n    }\n\n    onmessage(e) {\n        if (e.data.id in this.tasks) {\n            this.tasks[e.data.id](e.data.data)\n            delete this.tasks[e.data.id]\n        } else {\n            this.onevent(e)\n        }\n    }\n\n    // Execute a task\n    async exec(type, data, tx_keys) {\n        return new Promise((rs, rj) => {\n            let id = Utils.uuid()\n            this.send({ type, id, data }, tx_keys)\n            this.tasks[id] = res => {\n                rs(res)\n            }\n        })\n    }\n\n    // Execute a task, but just fucking do it,\n    // do not wait for the result\n    just(type, data, tx_keys) {\n        let id = Utils.uuid()\n        this.send({ type, id, data }, tx_keys)\n    }\n\n    // Relay an event from iframe postMessage\n    // (for the future)\n    async relay(event, just = false) {\n        return new Promise((rs, rj) => {\n            this.send(event, event.tx_keys)\n            if (!just) {\n                this.tasks[event.id] = res => {\n                    rs(res)\n                }\n            }\n        })\n    }\n\n    destroy() {\n        if (this.worker) this.worker.terminate()\n    }\n}\n\nexport default WebWork\n","\n// Dataset proxy between vuejs & WebWorker\n\nimport { now } from './script_utils.js'\n\nexport default class Dataset {\n\n    constructor(dc, desc) {\n\n        // TODO: dataset url arrow fn tells WW\n        // to load the ds directly from web\n\n        this.type = desc.type\n        this.id = desc.id\n        this.dc = dc\n\n        // Send the data to WW\n        if (desc.data) {\n            this.dc.ww.just('upload-data', {\n                [this.id]: desc\n            })\n            // Remove the data from the descriptor\n            delete desc.data\n        }\n\n        let proto = Object.getPrototypeOf(this)\n        Object.setPrototypeOf(desc, proto)\n        Object.defineProperty(desc, 'dc', {\n            get() { return dc }\n        })\n\n    }\n\n    // Watch for the changes of descriptors\n    static watcher(n, p) {\n        let nids = n.map(x => x.id)\n        let pids = p.map(x => x.id)\n\n        for (var id of nids) {\n            if (!pids.includes(id)) {\n                let ds = n.filter(x => x.id === id)[0]\n                this.dss[id] = new Dataset(this, ds)\n            }\n        }\n\n        for (var id of pids) {\n            if (!nids.includes(id) && this.dss[id]) {\n                this.dss[id].remove()\n            }\n        }\n    }\n\n    // Make an object for data transfer\n    static make_tx(dc, types) {\n\n        let main = dc.data.chart.data\n        let base = {}\n        if (types.find(x => x.type === 'OHLCV')) {\n            base = { ohlcv: main }\n        }\n\n        // TODO: add more sophisticated search\n        // (using 'script.datasets' paramerter)\n        /*for (var req of types) {\n            let ds = Object.values(dc.dss || {})\n                .find(x => x.type === req.type)\n            if (ds && ds.data) {\n                base[ds.id] = {\n                    id: ds.id,\n                    type: ds.type,\n                    data: ds.data\n                }\n            }\n        }*/\n        // TODO: Data request callback ?\n\n        return base\n    }\n\n    // Set data (overwrite the whole dataset)\n    set(data, exec = true) {\n        this.dc.ww.just('dataset-op', {\n            id: this.id,\n            type: 'set',\n            data: data,\n            exec: exec\n        })\n    }\n\n    // Update with new data (array of data points)\n    update(arr) {\n        this.dc.ww.just('update-data', {\n            [this.id]: arr\n        })\n    }\n\n    // Send WW a chunk to merge. The merge algo\n    // here is simpler than in DC. It just adds\n    // data at the beginning or/and the end of ds\n    merge(data, exec = true) {\n        this.dc.ww.just('dataset-op', {\n            id: this.id,\n            type: 'mrg',\n            data: data,\n            exec: exec\n        })\n    }\n\n    // Remove the ds from WW\n    remove(exec = true) {\n        this.dc.del(`datasets.${this.id}`)\n        this.dc.ww.just('dataset-op', {\n            id: this.id,\n            type: 'del',\n            exec: exec\n        })\n        delete this.dc.dss[this.id]\n    }\n\n    // Fetch data from WW\n    async data() {\n        let ds = await this.dc.ww.exec(\n            'get-dataset',\n            this.id\n        )\n        if (!ds) return\n        return ds.data\n    }\n\n}\n\n// Dataset reciever (created on WW)\n\nexport class DatasetWW {\n\n    constructor(id, data) {\n        this.last_upd = now()\n        this.id = id\n        if (Array.isArray(data)) {\n            // Regular array\n            this.data = data\n            if (id === 'ohlcv') this.type = 'OHLCV'\n        } else {\n            // Dataset descriptor\n            this.data = data.data\n            this.type = data.type\n        }\n    }\n\n    // Update from 'update-data' event\n    // TODO: ds size limit (in MB / data points)\n    static update_all(se, data) {\n        for (var k in data) {\n            if (k === 'ohlcv') continue\n            let id = k.split('.')[1] || k\n            if (!se.data[id]) continue\n            let arr = se.data[id].data\n            let iN = arr.length - 1\n            let last = arr[iN]\n\n            for (var dp of data[k]) {\n                if (!last || dp[0] > last[0]) {\n                    arr.push(dp)\n                }\n            }\n            se.data[id].last_upd = now()\n        }\n    }\n\n    merge(data) {\n        let len = this.data.length\n        if (!len) {\n            this.data = data\n            return\n        }\n        let t0 = this.data[0][0]\n        let tN = this.data[len - 1][0]\n        let l = data.filter(x => x[0] < t0)\n        let r = data.filter(x => x[0] > tN)\n        this.data = l.concat(this.data, r)\n    }\n\n    // On dataset operation\n    op(se, op) {\n        this.last_upd = now()\n        switch(op.type) {\n            case 'set':\n                this.data = op.data\n                se.recalc_size()\n                break\n            case 'del':\n                delete se.data[this.id]\n                se.recalc_size()\n                break\n            case 'mrg':\n                this.merge(op.data)\n                se.recalc_size()\n                break\n        }\n    }\n}\n","\n// DataCube \"private\" methods\n\nimport Utils from '../stuff/utils.js'\nimport DCEvents from './dc_events.js'\nimport Dataset from './dataset.js'\n\nexport default class DCCore extends DCEvents {\n\n    // Set TV instance (once). Called by TradingVue itself\n    init_tvjs($root) {\n        if (!this.tv) {\n            this.tv = $root\n            this.init_data()\n            this.update_ids()\n\n            // Listen to all setting changes\n            // TODO: works only with merge()\n            this.tv.$watch(() => this.get_by_query('.settings'),\n                (n, p) => this.on_settings(n, p))\n\n            // Listen to all indices changes\n            this.tv.$watch(() => this.get('.')\n                .map(x => x.settings.$uuid),\n                (n, p) => this.on_ids_changed(n, p))\n\n            // Watch for all 'datasets' changes\n            this.tv.$watch(() => this.get('datasets'),\n                Dataset.watcher.bind(this))\n        }\n    }\n\n    // Init Data Structure v1.1\n    init_data($root) {\n\n        if (!('chart' in this.data)) {\n            this.data.chart = {\n                type: 'Candles',\n                data: this.data.ohlcv || []\n            }\n        }\n\n        if (!('onchart' in this.data)) {\n            this.data.onchart = []\n        }\n\n        if (!('offchart' in this.data)) {\n            this.data.offchart = []\n        }\n\n        if (!this.data.chart.settings) {\n            this.data.chart.settings = {}\n        }\n\n        // Remove ohlcv cuz we have Data v1.1^\n        delete this.data.ohlcv\n\n        if (!('datasets' in this.data)) {\n            this.data.datasets = []\n        }\n\n        // Init dataset proxies\n        for (var ds of this.data.datasets) {\n            if (!this.dss) this.dss = {}\n            this.dss[ds.id] = new Dataset(this, ds)\n        }\n\n    }\n\n    // Range change callback (called by TradingVue)\n    // TODO: improve (reliablity + chunk with limited size)\n    async range_changed(range, tf, check=false) {\n\n        if (!this.loader) return\n        if (!this.loading) {\n            let first = this.data.chart.data[0][0]\n            if (range[0] < first) {\n                this.loading = true\n                await Utils.pause(250) // Load bigger chunks\n                range = range.slice()  // copy\n                range[0] = Math.floor(range[0])\n                range[1] = Math.floor(first)\n                let prom = this.loader(range, tf, d => {\n                    // Callback way\n                    this.chunk_loaded(d)\n                })\n                if (prom && prom.then) {\n                    // Promise way\n                    this.chunk_loaded(await prom)\n                }\n            }\n        }\n        if (!check) this.last_chunk = [range, tf]\n    }\n\n    // A new chunk of data is loaded\n    // TODO: bulletproof fetch\n    chunk_loaded(data) {\n\n        // Updates only candlestick data, or\n        if (Array.isArray(data)) {\n            this.merge('chart.data', data)\n        } else {\n            // Bunch of overlays, including chart.data\n            for (var k in data) {\n                this.merge(k, data[k])\n            }\n        }\n\n        this.loading = false\n        if (this.last_chunk) {\n            this.range_changed(...this.last_chunk, true)\n            this.last_chunk = null\n        }\n\n    }\n\n    // Update ids for all overlays\n    update_ids() {\n        this.data.chart.id = `chart.${this.data.chart.type}`\n        var count = {}\n        // grid_id,layer_id => DC id mapping\n        this.gldc = {}, this.dcgl = {}\n        for (var ov of this.data.onchart) {\n            if (count[ov.type] === undefined) {\n                count[ov.type] = 0\n            }\n            let i = count[ov.type]++\n            ov.id = `onchart.${ov.type}${i}`\n            if (!ov.name) ov.name = ov.type + ` ${i}`\n            if (!ov.settings) ov.settings = {}\n\n            // grid_id,layer_id => DC id mapping\n            this.gldc[`g0_${ov.type}_${i}`] = ov.id\n            this.dcgl[ov.id] = `g0_${ov.type}_${i}`\n        }\n        count = {}\n        let grids = [{}]\n        let gid = 0\n        for (var ov of this.data.offchart) {\n            if (count[ov.type] === undefined) {\n                count[ov.type] = 0\n            }\n            let i = count[ov.type]++\n            ov.id = `offchart.${ov.type}${i}`\n            if (!ov.name) ov.name = ov.type + ` ${i}`\n            if (!ov.settings) ov.settings = {}\n\n            // grid_id,layer_id => DC id mapping\n            gid++\n            let rgid = (ov.grid || {}).id || gid // real grid_id\n            // When we merge grid, skip ++\n            if ((ov.grid || {}).id) gid--\n            if (!grids[rgid]) grids[rgid] = {}\n            if (grids[rgid][ov.type] === undefined) {\n                grids[rgid][ov.type] = 0\n            }\n            let ri = grids[rgid][ov.type]++\n            this.gldc[`g${rgid}_${ov.type}_${ri}`] = ov.id\n            this.dcgl[ov.id] = `g${rgid}_${ov.type}_${ri}`\n        }\n    }\n\n    // TODO: chart refine (from the exchange chart)\n    update_candle(data) {\n        let ohlcv = this.data.chart.data\n        let last = ohlcv[ohlcv.length - 1]\n        let candle = data['candle']\n        let tf = this.tv.$refs.chart.interval_ms\n        let t_next = last[0] + tf\n        let now = data.t || Utils.now()\n        let t = now >= t_next ? (now - now % tf) : last[0]\n\n        // Update the entire candle\n        if (candle.length >= 6) {\n            t = candle[0]\n        } else {\n            candle = [t, ...candle]\n        }\n\n        this.agg.push('ohlcv', candle)\n        this.update_overlays(data, t, tf)\n        return t >= t_next\n\n    }\n\n    update_tick(data) {\n        let ohlcv = this.data.chart.data\n        let last = ohlcv[ohlcv.length - 1]\n        let tick = data['price']\n        let volume = data['volume'] || 0\n        let tf = this.tv.$refs.chart.interval_ms\n        if (!tf) {\n            return console.warn('Define the main timeframe')\n        }\n        let now = data.t || Utils.now()\n        if (!last) last = [now - now % tf]\n        let t_next = last[0] + tf\n\n        let t = now >= t_next ? (now - now % tf) : last[0]\n\n        if ((t >= t_next || !ohlcv.length) && tick !== undefined) {\n            // And new zero-height candle\n            let nc = [t, tick, tick, tick, tick, volume]\n            this.agg.push('ohlcv', nc, tf)\n            ohlcv.push(nc)\n            this.scroll_to(t)\n\n        } else if (tick !== undefined) {\n            // Update an existing one\n            // TODO: make a separate class Sampler\n            last[2] = Math.max(tick, last[2])\n            last[3] = Math.min(tick, last[3])\n            last[4] = tick\n            last[5] += volume\n            this.agg.push('ohlcv', last, tf)\n        }\n        this.update_overlays(data, t, tf)\n        return t >= t_next\n    }\n\n    // Updates all overlays with given values.\n    update_overlays(data, t, tf) {\n        for (var k in data) {\n            if (k === 'price' || k === 'volume' ||\n                k === 'candle' || k === 't') {\n                continue\n            }\n            if (k.includes('datasets.')) {\n                this.agg.push(k, data[k], tf)\n                continue\n            }\n            if (!Array.isArray(data[k])) {\n                var val = [data[k]]\n            } else {\n                val = data[k]\n            }\n            if (!k.includes('.data')) k += '.data'\n            this.agg.push(k, [t, ...val], tf)\n        }\n    }\n\n    // Returns array of objects matching query.\n    // Object contains { parent, index, value }\n    // TODO: query caching\n    get_by_query(query, chuck) {\n\n        let tuple = query.split('.')\n\n        switch (tuple[0]) {\n            case 'chart':\n                var result = this.chart_as_piv(tuple)\n                break\n            case 'onchart':\n            case 'offchart':\n                result = this.query_search(query, tuple)\n                break\n            case 'datasets':\n                result = this.query_search(query, tuple)\n                for (var r of result) {\n                    if (r.i === 'data') {\n                        r.v = this.dss[r.p.id].data()\n                    }\n                }\n                break\n            default:\n                /* Should get('.') return also the chart? */\n                /*let ch = this.chart_as_query([\n                    'chart',\n                    tuple[1]\n                ])*/\n                let on = this.query_search(query, [\n                    'onchart',\n                    tuple[0],\n                    tuple[1]\n                ])\n                let off = this.query_search(query, [\n                    'offchart',\n                    tuple[0],\n                    tuple[1]\n                ])\n                result = [/*ch[0],*/ ...on, ...off]\n                break\n        }\n        return result.filter(\n            x => !(x.v || {}).locked || chuck)\n    }\n\n    chart_as_piv(tuple) {\n        let field = tuple[1]\n        if (field) return [{\n            p: this.data.chart,\n            i: field,\n            v: this.data.chart[field]\n        }]\n        else return [{\n            p: this.data,\n            i: 'chart',\n            v: this.data.chart\n        }]\n    }\n\n    query_search(query, tuple) {\n\n        let side = tuple[0]\n        let path = tuple[1] || ''\n        let field = tuple[2]\n\n        let arr = this.data[side].filter(x => (\n            x.id === query ||\n            (x.id && x.id.includes(path)) ||\n            x.name === query ||\n            (x.name && x.name.includes(path)) ||\n            query.includes((x.settings || {}).$uuid)\n        ))\n\n        if (field) {\n            return arr.map(x => ({\n                p: x,\n                i: field,\n                v: x[field]\n            }))\n        }\n\n        return arr.map((x, i) => ({\n            p: this.data[side],\n            i: this.data[side].indexOf(x),\n            v: x\n        }))\n    }\n\n    merge_objects(obj, data, new_obj = {}) {\n\n        // The only way to get Vue to update all stuff\n        // reactively is to create a brand new object.\n        // TODO: Is there a simpler approach?\n        Object.assign(new_obj, obj.v)\n        Object.assign(new_obj, data)\n        obj.p[obj.i] = new_obj\n\n    }\n\n    // Merge overlapping time series\n    merge_ts(obj, data) {\n\n        // Assume that both arrays are pre-sorted\n\n        if (!data.length) return obj.v\n\n        let r1 = [obj.v[0][0], obj.v[obj.v.length - 1][0]]\n        let r2 = [data[0][0],  data[data.length - 1][0]]\n\n        // Overlap\n        let o = [Math.max(r1[0],r2[0]), Math.min(r1[1],r2[1])]\n\n        if (o[1] >= o[0]) {\n\n            let { od, d1, d2 } = this.ts_overlap(obj.v, data, o)\n\n            obj.v.splice(...d1)\n            data.splice(...d2)\n\n            // Dst === Overlap === Src\n            if (!obj.v.length && !data.length) {\n                obj.p[obj.i] = od\n                return obj.v\n            }\n\n            // If src is totally contained in dst\n            if (!data.length) { data = obj.v.splice(d1[0]) }\n\n            // If dst is totally contained in src\n            if (!obj.v.length) { obj.v = data.splice(d2[0]) }\n\n            obj.p[obj.i] = this.combine(obj.v, od, data)\n\n        } else {\n\n\n            obj.p[obj.i] = this.combine(obj.v, [], data)\n\n        }\n\n        return obj.v\n\n    }\n\n    // TODO: review performance, move to worker\n    ts_overlap(arr1, arr2, range) {\n\n        const t1 = range[0]\n        const t2 = range[1]\n\n        let ts = {} // timestamp map\n\n        let a1 = arr1.filter(x => x[0] >= t1 && x[0] <= t2)\n        let a2 = arr2.filter(x => x[0] >= t1 && x[0] <= t2)\n\n        // Indices of segments\n        let id11 = arr1.indexOf(a1[0])\n        let id12 = arr1.indexOf(a1[a1.length - 1])\n        let id21 = arr2.indexOf(a2[0])\n        let id22 = arr2.indexOf(a2[a2.length - 1])\n\n        for (var i = 0; i < a1.length; i++) {\n            ts[a1[i][0]] = a1[i]\n        }\n\n        for (var i = 0; i < a2.length; i++) {\n            ts[a2[i][0]] = a2[i]\n        }\n\n        let ts_sorted = Object.keys(ts).sort()\n\n        return {\n            od: ts_sorted.map(x => ts[x]),\n            d1: [id11, id12 - id11 + 1],\n            d2: [id21, id22 - id21 + 1]\n        }\n\n    }\n\n    // Combine parts together:\n    // (destination, overlap, source)\n    combine(dst, o, src) {\n\n        function last(arr) { return arr[arr.length - 1][0] }\n\n        if (!dst.length) { dst = o; o = [] }\n        if (!src.length) { src = o; o = [] }\n\n        // The overlap right in the middle\n        if (src[0][0] >= dst[0][0] && last(src) <= last(dst)) {\n\n            return Object.assign(dst, o)\n\n        // The overlap is on the right\n        } else if (last(src) > last(dst)) {\n\n            // Psh(...) is faster but can overflow the stack\n            if (o.length < 100000 && src.length < 100000) {\n                dst.push(...o, ...src)\n                return dst\n            } else {\n                return dst.concat(o, src)\n            }\n\n        // The overlap is on the left\n        } else if (src[0][0] < dst[0][0]) {\n\n            // Push(...) is faster but can overflow the stack\n            if (o.length < 100000 && src.length < 100000) {\n                src.push(...o, ...dst)\n                return src\n            } else {\n                return src.concat(o, dst)\n            }\n\n        } else {  return []  }\n\n    }\n\n    // Simple data-point merge (faster)\n    fast_merge(data, point, main = true) {\n\n        if (!data) return\n\n        let last_t = (data[data.length - 1] || [])[0]\n        let upd_t = point[0]\n\n        if (!data.length || upd_t > last_t) {\n            data.push(point)\n            if (main && this.sett.auto_scroll) {\n                this.scroll_to(upd_t)\n            }\n        } else if (upd_t === last_t) {\n            data[data.length - 1] = point\n        }\n\n    }\n\n    scroll_to(t) {\n        if (this.tv.$refs.chart.cursor.locked) return\n        let last = this.tv.$refs.chart.last_candle\n        if (!last) return\n        let tl = last[0]\n        let d = this.tv.getRange()[1] - tl\n        if (d > 0) this.tv.goto(t + d)\n    }\n\n}\n","\n// DataCube event handlers\n\nimport Utils from '../stuff/utils.js'\nimport Icons from '../stuff/icons.json'\nimport WebWork from './script_ww_api.js'\nimport Dataset from './dataset.js'\n\n\nexport default class DCEvents {\n\n    constructor() {\n\n        this.ww = new WebWork(this)\n\n        // Listen to the web-worker events\n        this.ww.onevent = e => {\n            for (var ctrl of this.tv.controllers) {\n                if (ctrl.ww) ctrl.ww(e.data)\n            }\n            switch(e.data.type) {\n                case 'request-data':\n                    // TODO: DataTunnel class for smarter data transfer\n                    if (this.ww._data_uploading) break\n                    let data = Dataset.make_tx(this, e.data.data)\n                    this.send_meta_2_ww()\n                    this.ww.just('upload-data', data)\n                    this.ww._data_uploading = true\n                    break\n                case 'overlay-data':\n                    this.on_overlay_data(e.data.data)\n                    break\n                case 'overlay-update':\n                    this.on_overlay_update(e.data.data)\n                    break\n                case 'data-uploaded':\n                    this.ww._data_uploading = false\n                    break\n                case 'engine-state':\n                    this.se_state = Object.assign(\n                        this.se_state || {}, e.data.data)\n                    break\n                case 'modify-overlay':\n                    this.modify_overlay(e.data.data)\n                    break\n                case 'script-signal':\n                    this.tv.$emit('signal', e.data.data)\n                    break\n            }\n            for (var ctrl of this.tv.controllers) {\n                if (ctrl.post_ww) ctrl.post_ww(e.data)\n            }\n        }\n    }\n\n    // Called when overalay/tv emits 'custom-event'\n    on_custom_event(event, args) {\n        switch(event) {\n            case 'register-tools': this.register_tools(args)\n                break\n            case 'exec-script': this.exec_script(args)\n                break\n            case 'exec-all-scripts': this.exec_all_scripts()\n                break\n            case 'data-len-changed': this.data_changed(args)\n                break\n            case 'tool-selected':\n                if (!args[0]) break // TODO: Quick fix, investigate\n                if (args[0].split(':')[0] === 'System') {\n                    this.system_tool(args[0].split(':')[1])\n                    break\n                }\n                this.data.tool = args[0]\n                if (args[0] === 'Cursor') {\n                    this.drawing_mode_off()\n                }\n                break\n            case 'grid-mousedown': this.grid_mousedown(args)\n                break\n            case 'drawing-mode-off': this.drawing_mode_off()\n                break\n            case 'change-settings': this.change_settings(args)\n                break\n            case 'range-changed': this.scripts_onrange(...args)\n                break\n            case 'scroll-lock': this.on_scroll_lock(args[0])\n                break\n            case 'object-selected': this.object_selected(args)\n                break\n            case 'remove-tool': this.system_tool('Remove')\n                break\n            case 'before-destroy': this.before_destroy()\n                break\n\n        }\n\n    }\n\n    // Triggered when one or multiple settings are changed\n    // We select only the changed ones & re-exec them on the\n    // web worker\n    on_settings(values, prev) {\n\n        if (!this.sett.scripts) return\n\n        let delta = {}\n        let changed = false\n\n        for (var i = 0; i < values.length; i++) {\n            let n = values[i]\n            let arr = prev.filter(x => x.v === n.v)\n            if (!arr.length && n.p.settings.$props) {\n                let id = n.p.settings.$uuid\n                if (Utils.is_scr_props_upd(n, prev) &&\n                    Utils.delayed_exec(n.p)) {\n                    delta[id] = n.v\n                    changed = true\n                    n.p.loading = true\n                }\n            }\n        }\n\n        if (changed && Object.keys(delta).length) {\n            let tf = this.tv.$refs.chart.interval_ms ||\n                     this.data.chart.tf\n            let range = this.tv.getRange()\n            this.ww.just('update-ov-settings', {\n                delta, tf, range\n            })\n        }\n\n    }\n\n    // When the set of $uuids is changed\n    on_ids_changed(values, prev) {\n\n        let rem = prev.filter(\n            x => x !== undefined && !values.includes(x))\n\n        if (rem.length) {\n            this.ww.just('remove-scripts', rem)\n        }\n    }\n\n    // Combine all tools and their mods\n    register_tools(tools) {\n        let preset = {}\n        for (var tool of this.data.tools || []) {\n             preset[tool.type] = tool\n             delete tool.type\n        }\n        this.data.tools = []\n        let list = [{\n            type: 'Cursor', icon: Icons['cursor.png']\n        }]\n        for (var tool of tools) {\n            var proto = Object.assign({}, tool.info)\n            let type = tool.info.type || 'Default'\n            proto.type = `${tool.use_for}:${type}`\n            this.merge_presets(proto, preset[tool.use_for])\n            this.merge_presets(proto, preset[proto.type])\n            delete proto.mods\n            list.push(proto)\n            for (var mod in tool.info.mods) {\n                var mp = Object.assign({}, proto)\n                mp = Object.assign(mp, tool.info.mods[mod])\n                mp.type = `${tool.use_for}:${mod}`\n                this.merge_presets(mp, preset[tool.use_for])\n                this.merge_presets(mp, preset[mp.type])\n                list.push(mp)\n            }\n        }\n        this.data.tools = list\n        this.data.tool = 'Cursor'\n    }\n\n    exec_script(args) {\n        if (args.length && this.sett.scripts) {\n            let obj = this.get_overlay(args[0])\n            if (!obj || obj.scripts === false) return\n            if (obj.script && obj.script.src) {\n                args[0].src = obj.script.src // opt, override the src\n            }\n            // Parse script props & get the values from the ov\n            // TODO: remove unnecessary script initializations\n            let s = obj.settings\n            let props = args[0].src.props || {}\n            if (!s.$uuid) s.$uuid = `${obj.type}-${Utils.uuid2()}`\n            args[0].uuid = s.$uuid\n            args[0].sett = s\n            for (var k in props || {}) {\n                let proto = props[k]\n                if (s[k] !== undefined) {\n                    proto.val = s[k] // use the existing val\n                    continue\n                }\n                if (proto.def === undefined) {\n                    // TODO: add support of info / errors to the legend\n                    console.error(\n                        `Overlay ${obj.id}: script prop '${k}' ` +\n                        `doesn't have a default value`)\n                    return\n                }\n                s[k] = proto.val = proto.def // set the default\n            }\n            // Remove old props (dropped by the current exec)\n            if (s.$props) {\n                for (var k in s) {\n                    if (s.$props.includes(k) && !(k in props)) {\n                        delete s[k]\n                    }\n                }\n            }\n            s.$props = Object.keys(args[0].src.props || {})\n            obj.loading = true\n            let tf = this.tv.$refs.chart.interval_ms ||\n                     this.data.chart.tf\n            let range = this.tv.getRange()\n            if (obj.script && obj.script.output != null) {\n                args[0].output = obj.script.output\n            }\n            this.ww.just('exec-script', {\n                s: args[0], tf, range\n            })\n        }\n    }\n\n    exec_all_scripts() {\n        if (!this.sett.scripts) return\n        this.set_loading(true)\n        let tf = this.tv.$refs.chart.interval_ms ||\n                 this.data.chart.tf\n        let range = this.tv.getRange()\n        this.ww.just('exec-all-scripts', { tf, range })\n    }\n\n    scripts_onrange(r) {\n        if (!this.sett.scripts) return\n        let delta = {}\n\n        this.get('.').forEach(v => {\n            if (v.script && v.script.execOnRange &&\n                v.settings.$uuid) {\n                // TODO: execInterrupt flag?\n                if (Utils.delayed_exec(v)) {\n                    delta[v.settings.$uuid] = v.settings\n                }\n            }\n        })\n\n        if (Object.keys(delta).length) {\n            let tf = this.tv.$refs.chart.interval_ms ||\n                     this.data.chart.tf\n            let range = this.tv.getRange()\n            this.ww.just('update-ov-settings', {\n                delta, tf, range\n            })\n        }\n    }\n\n    // Overlay modification from WW\n    modify_overlay(upd) {\n        let obj = this.get_overlay(upd)\n        if (obj) {\n            for (var k in upd.fields || {}) {\n                if (typeof obj[k] === 'object') {\n                    this.merge(`${upd.uuid}.${k}`, upd.fields[k])\n                } else {\n                    obj[k] = upd.fields[k]\n                }\n            }\n        }\n    }\n\n    data_changed(args) {\n        if (!this.sett.scripts) return\n        if (this.sett.data_change_exec === false) return\n        let main = this.data.chart.data\n        if (this.ww._data_uploading) return\n        if (!this.se_state.scripts) return\n        this.send_meta_2_ww()\n        this.ww.just('upload-data', { ohlcv: main })\n        this.ww._data_uploading = true\n        this.set_loading(true)\n    }\n\n    set_loading(flag) {\n        let skrr = this.get('.').filter(x => x.settings.$props)\n        for (var s of skrr) {\n            this.merge(`${s.id}`, { loading: flag })\n        }\n    }\n\n    send_meta_2_ww() {\n        let tf = this.tv.$refs.chart.interval_ms ||\n                 this.data.chart.tf\n        let range = this.tv.getRange()\n        this.ww.just('send-meta-info', { tf, range })\n    }\n\n    merge_presets(proto, preset) {\n        if (!preset) return\n        for (var k in preset) {\n            if (k === 'settings') {\n                Object.assign(proto[k], preset[k])\n            } else {\n                proto[k] = preset[k]\n            }\n        }\n    }\n\n    grid_mousedown(args) {\n        // TODO: tool state finished?\n        this.object_selected([])\n        // Remove the previous RangeTool\n        let rem = () => this.get('RangeTool')\n            .filter(x => x.settings.shiftMode)\n            .forEach(x => this.del(x.id))\n        if (this.data.tool && this.data.tool !== 'Cursor' &&\n           !this.data.drawingMode) {\n            // Prevent from \"null\" tools (tool created with HODL)\n            if (args[1].type !== 'tap') {\n                this.tv.$set(this.data, 'drawingMode', true)\n                this.build_tool(args[0])\n            } else {\n                this.tv.showTheTip(\n                    `<b>Hodl</b>+<b>Drug</b> to create, ` +\n                    `<b>Tap</b> to finish a tool`\n                )\n            }\n        } else if (this.sett.shift_measure && args[1].shiftKey) {\n            rem()\n            this.tv.$nextTick(() =>\n                this.build_tool(args[0], 'RangeTool:ShiftMode'))\n        } else {\n            rem()\n        }\n    }\n\n    drawing_mode_off() {\n        this.data.drawingMode = false\n        this.data.tool = 'Cursor'\n    }\n\n    // Place a new tool\n    build_tool(grid_id, type) {\n\n        let list = this.data.tools\n        type = type || this.data.tool\n        let proto = list.find(x => x.type === type)\n        if (!proto) return\n        let sett = Object.assign({}, proto.settings || {})\n        let data = (proto.data || []).slice()\n\n        if(!('legend' in sett)) sett.legend = false\n        if(!('z-index' in sett)) sett['z-index'] = 100\n        sett.$selected = true\n        sett.$state = 'wip'\n\n        let side = grid_id ? 'offchart' : 'onchart'\n        let id = this.add(side, {\n            name: proto.name,\n            type: type.split(':')[0],\n            settings: sett,\n            data: data,\n            grid: { id: grid_id }\n        })\n\n        sett.$uuid = `${id}-${Utils.now()}`\n\n        this.data.selected = sett.$uuid\n        this.add_trash_icon()\n    }\n\n    // Remove selected / Remove all, etc\n    system_tool(type) {\n        switch (type) {\n            case 'Remove':\n                if (this.data.selected) {\n                    this.del(this.data.selected)\n                    this.remove_trash_icon()\n                    this.drawing_mode_off()\n                    this.on_scroll_lock(false)\n                }\n                break\n        }\n    }\n\n    // Apply new overlay settings\n    change_settings(args) {\n        let settings = args[0]\n        delete settings.id\n        let grid_id = args[1]\n        this.merge(`${args[3]}.settings`, settings)\n    }\n\n    // Lock the scrolling mechanism\n    on_scroll_lock(flag) {\n        this.data.scrollLock = flag\n    }\n\n    // When new object is selected / unselected\n    object_selected(args) {\n        var q = this.data.selected\n        if (q) {\n            // Check if current drawing is finished\n            //let res = this.get_one(`${q}.settings`)\n            //if (res && res.$state !== 'finished') return\n            this.merge(`${q}.settings`, {\n                $selected: false\n            })\n            this.remove_trash_icon()\n        }\n        this.data.selected = null\n\n        if (!args.length) return\n\n        this.data.selected = args[2]\n        this.merge(`${args[2]}.settings`, {\n            $selected: true\n        })\n\n        this.add_trash_icon()\n    }\n\n    add_trash_icon() {\n        const type = 'System:Remove'\n        if (this.data.tools.find(x => x.type === type)) {\n            return\n        }\n        this.data.tools.push({\n            type, icon: Icons['trash.png']\n        })\n    }\n\n    remove_trash_icon() {\n        // TODO: Does not call Toolbar render (distr version)\n        const type = 'System:Remove'\n        Utils.overwrite(this.data.tools,\n            this.data.tools.filter(x => x.type !== type)\n        )\n    }\n\n    // Set overlay data from the web-worker\n    on_overlay_data(data) {\n        this.get('.').forEach(x => {\n            if (x.settings.$synth) this.del(`${x.id}`)\n        })\n        for (var ov of data) {\n            let obj = this.get_one(`${ov.id}`)\n            if (obj) {\n                obj.loading = false\n                if (!ov.data) continue\n                obj.data = ov.data\n            }\n            if (!ov.new_ovs) continue\n            for (var id in ov.new_ovs.onchart) {\n                if (!this.get_one(`onchart.${id}`)) {\n                    this.add('onchart', ov.new_ovs.onchart[id])\n                }\n            }\n            for (var id in ov.new_ovs.offchart) {\n                if (!this.get_one(`offchart.${id}`)) {\n                    this.add('offchart', ov.new_ovs.offchart[id])\n                }\n            }\n        }\n    }\n\n    // Push overlay updates from the web-worker\n    on_overlay_update(data) {\n        for (var ov of data) {\n            if (!ov.data) continue\n            let obj = this.get_one(`${ov.id}`)\n            if (obj) {\n                this.fast_merge(obj.data, ov.data, false)\n            }\n        }\n    }\n\n    // Clean-up unfinished business (tools)\n    before_destroy() {\n        let f = x => !x.settings.$state ||\n            x.settings.$state === 'finished'\n        this.data.onchart = this.data.onchart\n            .filter(f)\n        this.data.offchart = this.data.offchart\n            .filter(f)\n        this.drawing_mode_off()\n        this.on_scroll_lock(false)\n        this.object_selected([])\n        this.ww.destroy()\n    }\n\n    // Get overlay by grid-layer id\n    get_overlay(obj) {\n        let id = obj.id || `g${obj.grid_id}_${obj.layer_id}`\n        let dcid = obj.uuid || this.gldc[id]\n        return this.get_one(`${dcid}`)\n    }\n\n\n}\n","// Tick aggregation\n\nimport Utils from '../stuff/utils.js'\n\nexport default class AggTool {\n\n    constructor(dc, int = 100) {\n\n        this.symbols = {}\n        this.int = int // Itarval in ms\n        this.dc = dc\n        this.st_id = null\n        this.data_changed = false\n\n    }\n\n    push(sym, upd, tf) {\n\n        // Start auto updates\n        if (!this.st_id) {\n            this.st_id = setTimeout(() => this.update())\n        }\n\n        tf = parseInt(tf)\n        let old = this.symbols[sym]\n        let t = Utils.now()\n        let isds = sym.includes('datasets.')\n        this.data_changed = true\n\n        if (!old) {\n\n            this.symbols[sym] = { upd, t, data: [] }\n\n        } else if (upd[0] >= old.upd[0] + tf && !isds) {\n\n            // Refine the previous data point\n            this.refine(sym, old.upd.slice())\n\n            this.symbols[sym] = { upd, t, data: [] }\n\n        } else {\n\n            // Tick updates the current\n            this.symbols[sym].upd = upd\n            this.symbols[sym].t = t\n\n        }\n\n        if (isds) {\n            this.symbols[sym].data.push(upd)\n        }\n\n    }\n\n    update() {\n        let out = {}\n        for (var sym in this.symbols) {\n            let upd = this.symbols[sym].upd\n            switch (sym) {\n                case 'ohlcv':\n                    var data = this.dc.data.chart.data\n                    this.dc.fast_merge(data, upd)\n                    out.ohlcv = data.slice(-2)\n                    break\n                default:\n                    if (sym.includes('datasets.')) {\n                        this.update_ds(sym, out)\n                        continue\n                    }\n                    var data = this.dc.get_one(`${sym}`)\n                    if (!data) continue\n                    this.dc.fast_merge(data, upd, false)\n                    break\n            }\n        }\n        // TODO: fill gaps\n        if (this.data_changed) {\n            this.dc.ww.just('update-data', out)\n            this.data_changed = false\n        }\n        setTimeout(() => this.update(), this.int)\n    }\n\n    refine(sym, upd) {\n        if (sym === 'ohlcv') {\n            var data = this.dc.data.chart.data\n            this.dc.fast_merge(data, upd)\n        } else {\n            var data = this.dc.get_one(`${sym}`)\n            if (!data) return\n            this.dc.fast_merge(data, upd, false)\n        }\n    }\n\n    update_ds(sym, out) {\n        let data = this.symbols[sym].data\n        if (data.length) {\n            out[sym] = data\n            this.symbols[sym].data = []\n        }\n    }\n\n    clear() {\n        this.symbols = {}\n    }\n\n}\n","\n// Main DataHelper class. A container for data,\n// which works as a proxy and CRUD interface\n\nimport Utils from '../stuff/utils.js'\nimport DCCore from './dc_core.js'\nimport SettProxy from './sett_proxy.js'\nimport AggTool from './agg_tool.js'\n\n\n// Interface methods. Private methods in dc_core.js\nexport default class DataCube extends DCCore {\n\n    constructor(data = {}, sett = {}) {\n\n        let def_sett = {\n            aggregation: 100,       // Update aggregation interval\n            script_depth: 0,        // 0 === Exec on all data\n            auto_scroll: true,      // Auto scroll to a new candle\n            scripts: true,          // Enable overlays scripts,\n            ww_ram_limit: 0,        // WebWorker RAM limit (MB)\n            node_url: null,         // Use node.js instead of WW\n            shift_measure: true     // Draw measurment shift+click\n        }\n        sett = Object.assign(def_sett, sett)\n\n        super()\n        this.sett = sett\n        this.data = data\n        this.sett = SettProxy(sett, this.ww)\n        this.agg = new AggTool(this, sett.aggregation)\n        this.se_state = {}\n\n        //this.agg.update = this.agg_update.bind(this)\n    }\n\n    // Add new overlay\n    add(side, overlay) {\n\n        if (side !== 'onchart' && side !== 'offchart' &&\n            side !== 'datasets') {\n            return\n        }\n\n        this.data[side].push(overlay)\n        this.update_ids()\n\n        return overlay.id\n    }\n\n    // Get all objects matching the query\n    get(query) {\n        return this.get_by_query(query).map(x => x.v)\n    }\n\n    // Get first object matching the query\n    get_one(query) {\n        return this.get_by_query(query).map(x => x.v)[0]\n    }\n\n    // Set data (reactively)\n    set(query, data) {\n\n        let objects = this.get_by_query(query)\n\n        for (var obj of objects) {\n\n            let i = obj.i !== undefined ?\n                obj.i :\n                obj.p.indexOf(obj.v)\n\n            if (i !== -1) {\n                obj.p[i] = data\n            }\n        }\n\n        this.update_ids()\n\n    }\n\n    // Merge object or array (reactively)\n    merge(query, data) {\n\n        let objects = this.get_by_query(query)\n\n        for (var obj of objects) {\n            if (Array.isArray(obj.v)) {\n                if (!Array.isArray(data)) continue\n                // If array is a timeseries, merge it by timestamp\n                // else merge by item index\n                if (obj.v[0] && obj.v[0].length >= 2) {\n                    this.merge_ts(obj, data)\n                } else {\n                    this.merge_objects(obj, data, [])\n                }\n            } else if (typeof obj.v === 'object') {\n                this.merge_objects(obj, data)\n            }\n        }\n\n        this.update_ids()\n\n    }\n\n    // Remove an overlay by query (id/type/name/...)\n    del(query) {\n\n        let objects = this.get_by_query(query)\n\n        for (var obj of objects) {\n\n            // Find current index of the field (if not defined)\n            let i = typeof obj.i !== 'number' ?\n                obj.i : obj.p.indexOf(obj.v)\n\n            if (i !== -1) {\n                this.tv.$delete(obj.p, i)\n            }\n\n        }\n\n        this.update_ids()\n    }\n\n    // Update/append data point, depending on timestamp\n    update(data) {\n        if(data['candle']) {\n            return this.update_candle(data)\n        } else {\n            return this.update_tick(data)\n        }\n    }\n\n    // Lock overlays from being pulled by query_search\n    // TODO: subject to review\n    lock(query) {\n        let objects = this.get_by_query(query)\n        objects.forEach(x => {\n            if (x.v && x.v.id && x.v.type) {\n                x.v.locked = true\n            }\n        })\n    }\n\n    // Unlock overlays from being pulled by query_search\n    //\n    unlock(query) {\n        let objects = this.get_by_query(query, true)\n        objects.forEach(x => {\n            if (x.v && x.v.id && x.v.type) {\n                x.v.locked = false\n            }\n        })\n    }\n\n    // Show indicator\n    show(query) {\n        if (query === 'offchart' || query === 'onchart') {\n             query += '.'\n        } else if (query === '.') {\n            query = ''\n        }\n        this.merge(query + '.settings', { display: true })\n    }\n\n    // Hide indicator\n    hide(query) {\n        if (query === 'offchart' || query === 'onchart') {\n             query += '.'\n        } else if (query === '.') {\n             query = ''\n        }\n        this.merge(query + '.settings', { display: false })\n    }\n\n    // Set data loader callback\n    onrange(callback) {\n        this.loader = callback\n        setTimeout(() =>\n            this.tv.set_loader(callback ? this : null), 0\n        )\n    }\n\n}\n","\n// Sends all dc.sett changes to the web-worker\n\nexport default function(sett, ww) {\n\n    const h = {\n        get: function(sett, k) {\n            return sett[k]\n        },\n        set: function(sett, k, v) {\n            sett[k] = v\n            ww.just('update-dc-settings', sett)\n            return true\n        }\n    }\n\n    ww.just('update-dc-settings', sett)\n\n    return new Proxy(sett, h)\n}\n","// Mouse event handler for overlay\n\nexport default class Mouse {\n\n    constructor(comp) {\n        this.comp = comp\n        this.map = {}\n        this.listeners = 0\n        this.pressed = false\n        this.x = comp.$props.cursor.x\n        this.y = comp.$props.cursor.y\n        this.t = comp.$props.cursor.t\n        this.y$ = comp.$props.cursor.y$\n    }\n\n    // You can choose where to place the handler\n    // (beginning or end of the queue)\n    on(name, handler, dir = \"unshift\") {\n        if (!handler) return\n        this.map[name] = this.map[name] || []\n        this.map[name][dir](handler)\n        this.listeners++\n    }\n\n    off(name, handler) {\n        if (!this.map[name]) return\n        let i = this.map[name].indexOf(handler)\n        if (i < 0) return\n        this.map[name].splice(i, 1)\n        this.listeners--\n    }\n\n    // Called by grid.js\n    emit(name, event) {\n        const l = this.comp.layout\n        if (name in this.map) {\n            for (var f of this.map[name]) {\n                f(event)\n            }\n        }\n        if (name === 'mousemove') {\n            this.x = event.layerX\n            this.y = event.layerY\n            this.t = l.screen2t(this.x)\n            this.y$ = l.screen2$(this.y)\n        }\n        if (name === 'mousedown') {\n            this.pressed = true\n        }\n        if (name === 'mouseup') {\n            this.pressed = false\n        }\n    }\n\n}\n","\n// Usuful stuff for creating overlays. Include as mixin\n\nimport Mouse from '../stuff/mouse.js'\n\nexport default {\n    props: [\n        'id', 'num', 'interval', 'cursor', 'colors',\n        'layout', 'sub', 'data', 'settings', 'grid_id',\n        'font', 'config', 'meta', 'tf', 'i0'\n    ],\n    emits: [\n        'new-grid-layer', 'layer-meta-props', 'delete-grid-layer',\n        'custom-event', 'show-grid-layer', 'drawing-mode-off',\n        'scroll-lock', 'change-settings', 'object-selected',\n        'new-shader', 'remove-tool', 'redraw-grid'\n    ],\n    mounted() {\n        // TODO(1): when hot reloading, dynamicaly changed mixins\n        // dissapear (cuz it's a hack), the only way for now\n        // is to reload the browser\n        if (!this.draw) {\n            this.draw = ctx => {\n                let text = 'EARLY ADOPTER BUG: reload the browser & enjoy'\n                console.warn(text)\n            }\n        }\n        // Main chart?\n        let main = this.$props.sub === this.$props.data\n\n        this.meta_info()\n\n        this.$emit('new-grid-layer', {\n            name: this.$options.name,\n            id: this.$props.id,\n            renderer: this,\n            display: 'display' in this.$props.settings ?\n               this.$props.settings['display'] : true,\n            z: this.$props.settings['z-index'] ||\n               this.$props.settings['zIndex'] || (main ? 0 : -1),\n        })\n\n        // Overlay meta-props (adjusting behaviour)\n        this.$emit('layer-meta-props', {\n            grid_id: this.$props.grid_id,\n            layer_id: this.$props.id,\n            legend: this.legend,\n            data_colors: this.data_colors,\n            y_range: this.y_range\n        })\n        this.exec_script()\n        this.mouse = new Mouse(this)\n        if (this.init_tool) this.init_tool()\n        if (this.init) this.init()\n    },\n    beforeUnmount() {\n        if (this.destroy) this.destroy()\n        this.$emit('delete-grid-layer', this.$props.id)\n    },\n    methods: {\n        use_for() {\n            /* override it (mandatory) */\n            console.warn('use_for() should be implemented')\n            console.warn(\n            `Format: use_for() {\n                  return ['type1', 'type2', ...]\n            }`)\n        },\n        meta_info() {\n            /* override it (optional) */\n            let id = this.$props.id\n            console.warn(\n                `${id} meta_info() is req. for publishing`)\n            console.warn(\n            `Format: meta_info() {\n                author: 'Satoshi Smith',\n                version: '1.0.0',\n                contact (opt) '<email>'\n                github: (opt) '<GitHub Page>',\n            }`)\n        },\n        custom_event(event, ...args) {\n            if (event.split(':')[0] === 'hook') return\n            if (event === 'change-settings' ||\n                event === 'object-selected' ||\n                event === 'new-shader' ||\n                event === 'new-interface' ||\n                event === 'remove-tool') {\n                args.push(this.grid_id, this.id)\n                if (this.$props.settings.$uuid) {\n                    args.push(this.$props.settings.$uuid)\n                }\n            }\n            if (event === 'new-interface') {\n                args[0].overlay = this\n                args[0].uuid = this.last_ux_id =\n                    `${this.grid_id}-${this.id}-${this.uxs_count++}`\n            }\n            this.$emit('custom-event', {event, args})\n        },\n        // TODO: the event is not firing when the same\n        // overlay type is added to the offchart[]\n        exec_script() {\n            if (this.calc) this.$emit('exec-script', {\n                grid_id: this.$props.grid_id,\n                layer_id: this.$props.id,\n                src: this.calc(),\n                use_for: this.use_for()\n            })\n        }\n    },\n    watch: {\n        settings: {\n            handler: function(n, p) {\n                if (this.watch_uuid) this.watch_uuid(n, p)\n                this.$emit('show-grid-layer', {\n                    id: this.$props.id,\n                    display: 'display' in this.$props.settings ?\n                        this.$props.settings['display'] : true,\n                })\n            },\n            deep: true\n        }\n    },\n    data() { return { uxs_count: 0, last_ux_id: null } },\n    render() { return [] }\n}\n","// Keyboard event handler for overlay\n\nexport default class Keys {\n\n    constructor(comp) {\n        this.comp = comp\n        this.map = {}\n        this.listeners = 0\n        this.keymap = {}\n    }\n\n    on(name, handler) {\n        if (!handler) return\n        this.map[name] = this.map[name] || []\n        this.map[name].push(handler)\n        this.listeners++\n    }\n\n    // Called by grid.js\n    emit(name, event) {\n        if (name in this.map) {\n            for (var f of this.map[name]) {\n                f(event)\n            }\n        }\n        if (name === 'keydown') {\n            if (!this.keymap[event.key]) {\n                this.emit(event.key)\n            }\n            this.keymap[event.key] = true\n        }\n        if (name === 'keyup') {\n            this.keymap[event.key] = false\n        }\n    }\n\n    pressed(key) {\n        return this.keymap[key]\n    }\n\n}\n","\n// Usuful stuff for creating tools. Include as mixin\n\nimport Keys from '../stuff/keys.js'\nimport Utils from '../stuff/utils.js'\n\nexport default {\n    methods: {\n        init_tool() {\n            // Collision functions (float, float) => bool,\n            this.collisions = []\n            this.pins = []\n            this.mouse.on('mousemove', e => {\n                if (this.collisions.some(f => f(\n                    this.mouse.x, this.mouse.y,\n                ))) {\n                    this.show_pins = true\n                } else {\n                    this.show_pins = false\n                }\n                if (this.drag) this.drag_update()\n            })\n\n            this.mouse.on('mousedown', e => {\n                if (Utils.default_prevented(e)) return\n                if (this.collisions.some(f => f(\n                    this.mouse.x, this.mouse.y,\n                ))) {\n                    if (!this.selected) {\n                        this.$emit('object-selected')\n                    }\n                    this.start_drag()\n                    e.preventDefault()\n                    this.pins.forEach(x => x.mousedown(e, true))\n                }\n            })\n            this.mouse.on('mouseup', e => {\n                this.drag = null\n                this.$emit('scroll-lock', false)\n            })\n\n            this.keys = new Keys(this)\n            this.keys.on('Delete', this.remove_tool)\n            this.keys.on('Backspace', this.remove_tool)\n\n            this.show_pins = false\n            this.drag = null\n        },\n        render_pins(ctx) {\n            if (this.selected || this.show_pins) {\n                this.pins.forEach(x => x.draw(ctx))\n            }\n        },\n        set_state(name) {\n            this.$emit('change-settings', {\n                 $state: name\n            })\n        },\n        watch_uuid(n, p) {\n            // If layer $uuid is changed, then re-init\n            // pins & collisions\n            if (n.$uuid !== p.$uuid) {\n                for (var p of this.pins) p.re_init()\n                this.collisions = []\n                this.show_pins = false\n                this.drag = null\n            }\n        },\n        pre_draw() {\n            // Delete all collision functions before\n            // the draw() call and let primitives set\n            // them again\n            this.collisions = []\n        },\n        remove_tool() {\n            if (this.selected) this.$emit('remove-tool')\n        },\n        start_drag() {\n            this.$emit('scroll-lock', true)\n            let cursor = this.$props.cursor\n            this.drag = { t: cursor.t, y$: cursor.y$ }\n            this.pins.forEach(x => x.rec_position())\n        },\n        drag_update() {\n            let dt = this.$props.cursor.t - this.drag.t\n            let dy = this.$props.cursor.y$ - this.drag.y$\n            this.pins.forEach(x => x.update_from(\n                [x.t1 + dt, x.y$1 + dy], true\n            ))\n        }\n    },\n    computed: {\n        // Settings starting with $ are reserved\n        selected() {\n            return this.$props.settings.$selected\n        },\n        state() {\n            return this.$props.settings.$state\n        },\n    }\n}\n","\n// Html interface, shown on top of the grid.\n// Can be static (a tooltip) or interactive,\n// e.g. a control panel.\n\nexport default {\n    props: ['ux', 'updater', 'colors', 'wrapper'],\n    mounted() {\n        this._$emit = this.$emit\n        this.$emit = this.custom_event\n        if (this.init) this.init()\n    },\n    methods: {\n        close() {\n            this.$emit('custom-event', {\n                event: 'close-interface',\n                args: [this.$props.ux.uuid]\n            })\n        },\n        // TODO: emit all the way to the uxlist\n        // add apply the changes there\n        modify(obj) {\n            this.$emit('custom-event', {\n                event: 'modify-interface',\n                args: [this.$props.ux.uuid, obj]\n            })\n        },\n        custom_event(event, ...args) {\n            if (event.split(':')[0] === 'hook') return\n            this._$emit('custom-event', {event, args})\n        }\n    },\n    computed: {\n        overlay() {\n            return this.$props.ux.overlay\n        },\n        layout() {\n            return this.overlay.layout\n        },\n        uxr() {\n            return this.$props.ux\n        }\n    },\n    data() {\n        return {\n\n        }\n    }\n}\n","\n// Candle object for Candles overlay\n\nexport default class CandleExt {\n\n    constructor(overlay, ctx, data) {\n        this.ctx = ctx\n        this.self = overlay\n        this.style = data.raw[6] || this.self\n        this.draw(data)\n    }\n\n    draw(data) {\n        const green = data.raw[4] >= data.raw[1]\n        const body_color = green ?\n            this.style.colorCandleUp :\n            this.style.colorCandleDw\n\n        const wick_color = green ?\n            this.style.colorWickUp :\n            this.style.colorWickDw\n\n        let w = Math.max(data.w, 1)\n        let hw = Math.max(Math.floor(w * 0.5), 1)\n        let h = Math.abs(data.o - data.c)\n        let max_h = data.c === data.o ? 1 : 2\n        let x05 = Math.floor(data.x) - 0.5\n\n        this.ctx.strokeStyle = wick_color\n\n        this.ctx.beginPath()\n        this.ctx.moveTo(x05, Math.floor(data.h))\n        this.ctx.lineTo(x05, Math.floor(data.l))\n\n        this.ctx.stroke()\n\n        if (data.w > 1.5) {\n\n            this.ctx.fillStyle = body_color\n            // TODO: Move common calculations to layout.js\n            let s = green ? 1 : -1\n            this.ctx.fillRect(\n                Math.floor(data.x - hw -1),\n                data.c,\n                Math.floor(hw * 2 + 1),\n                s * Math.max(h, max_h),\n            )\n\n        } else {\n\n            this.ctx.strokeStyle = body_color\n\n            this.ctx.beginPath()\n            this.ctx.moveTo(\n                x05,\n                Math.floor(Math.min(data.o, data.c)),\n            )\n            this.ctx.lineTo(\n                x05,\n                Math.floor(Math.max(data.o, data.c)) +\n                    (data.o === data.c ? 1 : 0)\n            )\n\n            this.ctx.stroke()\n\n        }\n\n    }\n\n}\n","\nexport default class VolbarExt {\n\n    constructor(overlay, ctx, data) {\n        this.ctx = ctx\n        this.$p = overlay.$props\n        this.self = overlay\n        this.style = data.raw[6] || this.self\n        this.draw(data)\n    }\n\n    draw(data) {\n        let y0 = this.$p.layout.height\n        let w = data.x2 - data.x1\n        let h = Math.floor(data.h)\n\n        this.ctx.fillStyle = data.green ?\n            this.style.colorVolUp :\n            this.style.colorVolDw\n\n        this.ctx.fillRect(\n            Math.floor(data.x1),\n            Math.floor(y0 - h - 0.5),\n            Math.floor(w),\n            Math.floor(h + 1)\n        )\n\n    }\n\n}\n","\n// Math/Geometry\n\nexport default {\n\n    // Distance from point to line\n    // p1 = point, (p2, p3) = line\n    point2line(p1, p2, p3) {\n\n        let { area, base } = this.tri(p1, p2, p3)\n        return Math.abs(this.tri_h(area, base))\n    },\n\n    // Distance from point to segment\n    // p1 = point, (p2, p3) = segment\n    point2seg(p1, p2, p3) {\n\n        let { area, base } = this.tri(p1, p2, p3)\n        // Vector projection\n        let proj = this.dot_prod(p1, p2, p3) / base\n        // Distance from left pin\n        let l1 = Math.max(-proj, 0)\n        // Distance from right pin\n        let l2 = Math.max(proj - base, 0)\n        // Normal\n        let h = Math.abs(this.tri_h(area, base))\n        return Math.max(h, l1, l2)\n    },\n\n    // Distance from point to ray\n    // p1 = point, (p2, p3) = ray\n    point2ray(p1, p2, p3) {\n\n        let { area, base } = this.tri(p1, p2, p3)\n        // Vector projection\n        let proj = this.dot_prod(p1, p2, p3) / base\n        // Distance from left pin\n        let l1 = Math.max(-proj, 0)\n        // Normal\n        let h = Math.abs(this.tri_h(area, base))\n        return Math.max(h, l1)\n    },\n\n    tri(p1, p2, p3) {\n        let area = this.area(p1, p2, p3)\n        let dx = p3[0] - p2[0]\n        let dy = p3[1] - p2[1]\n        let base = Math.sqrt(dx * dx + dy * dy)\n        return { area, base }\n    },\n\n    /* Area of triangle:\n            p1\n          /    \\\n        p2  _  p3\n    */\n    area (p1, p2, p3) {\n\t     return (\n             p1[0] * (p2[1] - p3[1]) +\n             p2[0] * (p3[1] - p1[1]) +\n             p3[0] * (p1[1] - p2[1])\n         )\n    },\n\n    // Triangle height\n    tri_h(area, base) {\n\t    return area / base\n    },\n\n    // Dot product of (p2, p3) and (p2, p1)\n    dot_prod(p1, p2, p3) {\n        let v1 = [p3[0] - p2[0], p3[1] - p2[1]]\n        let v2 = [p1[0] - p2[0], p1[1] - p2[1]]\n        return v1[0] * v2[0] + v1[1] * v2[1]\n    },\n\n    // Symmetrical log\n    log(x) {\n        // TODO: log for small values\n        return Math.sign(x) * Math.log(Math.abs(x) + 1)\n    },\n\n    // Symmetrical exp\n    exp(x) {\n        return Math.sign(x) * (Math.exp(Math.abs(x)) - 1)\n    },\n\n    // Middle line on log scale based on range & px height\n    log_mid(r, h) {\n        let log_hi = this.log(r[0])\n        let log_lo = this.log(r[1])\n        let px = h / 2\n        let gx = log_hi -  px * (log_hi - log_lo) / h\n        return this.exp(gx)\n    },\n\n    // Return new adjusted range, based on the previous\n    // range, new $_hi, target middle line\n    re_range(r1, hi2, mid) {\n        let log_hi1 = this.log(r1[0])\n        let log_lo1 = this.log(r1[1])\n        let log_hi2 = this.log(hi2)\n        let log_$ = this.log(mid)\n\n        let W = (log_hi2 - log_$) * (log_hi1 - log_lo1) /\n                (log_hi1 - log_$)\n\n        return this.exp(log_hi2 - W)\n\n    },\n\n    // Return new adjusted range, based on the previous\n    // range, new $_hi, target middle line + dy (shift)\n    // WASTE\n    /*range_shift(r1, hi2, mid, dy, h) {\n        let log_hi1 = this.log(r1[0])\n        let log_lo1 = this.log(r1[1])\n        let log_hi2 = this.log(hi2)\n        let log_$ = this.log(mid)\n\n        let W = h * (log_hi2 - log_$) /\n                (h * (log_hi1 - log_$) / (log_hi1 - log_lo1) + dy)\n\n        return this.exp(log_hi2 - W)\n\n    }*/\n\n}\n","\n// Draws a line, adds corresponding collision f-n\n\nimport Math2 from '../../stuff/math.js'\nimport Utils from '../../stuff/utils.js'\n\nexport default class Line {\n\n    // Overlay ref, canvas ctx\n    constructor(overlay, ctx) {\n        this.ctx = ctx\n        this.comp = overlay\n        this.T = overlay.$props.config.TOOL_COLL\n        if (Utils.is_mobile) this.T *= 2\n    }\n\n    // p1[t, $], p2[t, $] (time-price coordinates)\n    draw(p1, p2) {\n\n        const layout = this.comp.$props.layout\n\n        let x1 = layout.t2screen(p1[0])\n        let y1 = layout.$2screen(p1[1])\n        let x2 = layout.t2screen(p2[0])\n        let y2 = layout.$2screen(p2[1])\n\n        this.ctx.moveTo(x1, y1)\n        this.ctx.lineTo(x2, y2)\n\n        let w = layout.width\n        let h = layout.height\n        // TODO: transform k (angle) to screen ratio\n        // (this requires a new a2screen function)\n        let k = (y2 - y1) / (x2 - x1)\n        let s = Math.sign(x2 - x1 || y2 - y1)\n        let dx = w * s * 2\n        let dy = w * k * s * 2\n        if (dy === Infinity) { dx = 0, dy = h * s}\n\n        this.ctx.moveTo(x2, y2)\n        this.ctx.lineTo(x2 + dx, y2 + dy)\n        if (!this.ray) {\n            this.ctx.moveTo(x1, y1)\n            this.ctx.lineTo(x1 - dx, y1 - dy)\n        }\n\n        this.comp.collisions.push(\n            this.make([x1, y1], [x2, y2])\n        )\n    }\n\n    // Collision function. x, y - mouse coord.\n    make(p1, p2) {\n        let f = this.ray ?\n            Math2.point2ray.bind(Math2) :\n            Math2.point2line.bind(Math2)\n        return (x, y) => {\n            return f(\n                [x, y], p1, p2\n            ) < this.T\n        }\n    }\n}\n","// Semi-automatic pin object. For stretching things.\n\nimport Utils from '../../stuff/utils.js'\n\nexport default class Pin {\n\n    // (Comp reference, a name in overlay settings,\n    // pin parameters)\n    constructor(comp, name, params = {}) {\n\n        this.RADIUS = comp.$props.config.PIN_RADIUS || 5.5\n        this.RADIUS_SQ = Math.pow(this.RADIUS + 7, 2)\n\n        if (Utils.is_mobile) {\n            this.RADIUS += 2\n            this.RADIUS_SQ *= 2.5\n        }\n\n        this.COLOR_BACK = comp.$props.colors.back\n        this.COLOR_BR = comp.$props.colors.text\n\n        this.comp = comp\n        this.layout = comp.layout\n        this.mouse = comp.mouse\n        this.name = name\n        this.state = params.state || 'settled'\n        this.hidden = params.hidden || false\n\n        this.mouse.on('mousemove', e => this.mousemove(e))\n        this.mouse.on('mousedown', e => this.mousedown(e))\n        this.mouse.on('mouseup', e => this.mouseup(e))\n\n        if (comp.state === 'finished') {\n            this.state = 'settled'\n            this.update_from(comp.$props.settings[name])\n        } else {\n            this.update()\n        }\n\n        if (this.state !== 'settled') {\n            this.comp.$emit('scroll-lock', true)\n        }\n    }\n\n    re_init() {\n        this.update_from(\n            this.comp.$props.settings[this.name]\n        )\n    }\n\n    draw(ctx) {\n        if (this.hidden) return\n        switch (this.state) {\n            case 'tracking':\n                break\n            case 'dragging':\n                if (!this.moved) this.draw_circle(ctx)\n                break\n            case 'settled':\n                this.draw_circle(ctx)\n                break\n        }\n    }\n\n    draw_circle(ctx) {\n\n        this.layout = this.comp.layout\n        if (this.comp.selected) {\n            var r = this.RADIUS, lw = 1.5\n        } else {\n            var r = this.RADIUS * 0.95, lw = 1\n        }\n\n        ctx.lineWidth = lw\n        ctx.strokeStyle = this.COLOR_BR\n        ctx.fillStyle = this.COLOR_BACK\n        ctx.beginPath()\n        ctx.arc(\n            this.x = this.layout.t2screen(this.t),\n            this.y = this.layout.$2screen(this.y$),\n            r + 0.5, 0, Math.PI * 2, true)\n        ctx.fill()\n        ctx.stroke()\n    }\n\n    update() {\n\n        this.y$ = this.comp.$props.cursor.y$\n        this.y =  this.comp.$props.cursor.y\n        this.t = this.comp.$props.cursor.t\n        this.x =  this.comp.$props.cursor.x\n\n        // Save pin as time in IB mode\n        //if (this.layout.ti_map.ib) {\n        //    this.t = this.layout.ti_map.i2t(this.t )\n        //}\n\n        // Reset the settings attahed to the pin (position)\n        this.comp.$emit('change-settings', {\n             [this.name]: [this.t, this.y$]\n        })\n    }\n\n    update_from(data, emit = false) {\n\n        if (!data) return\n        this.layout = this.comp.layout\n\n        this.y$ = data[1]\n        this.y = this.layout.$2screen(this.y$)\n        this.t = data[0]\n        this.x = this.layout.t2screen(this.t)\n\n        // TODO: Save pin as time in IB mode\n        //if (this.layout.ti_map.ib) {\n        //    this.t = this.layout.ti_map.i2t(this.t )\n        //}\n\n        if (emit) this.comp.$emit('change-settings', {\n             [this.name]: [this.t, this.y$]\n        })\n\n    }\n\n    rec_position() {\n        this.t1 = this.t\n        this.y$1 = this.y$\n    }\n\n    mousemove(event) {\n\n        switch(this.state) {\n            case 'tracking':\n            case 'dragging':\n                this.moved = true\n                this.update()\n                break\n        }\n\n\n    }\n\n    mousedown(event, force = false) {\n        if (Utils.default_prevented(event) && !force) return\n        switch (this.state) {\n            case 'tracking':\n                this.state = 'settled'\n                if (this.on_settled) this.on_settled()\n                this.comp.$emit('scroll-lock', false)\n                break\n            case 'settled':\n                if (this.hidden) return\n                if (this.hover()) {\n                    this.state = 'dragging'\n                    this.moved = false\n                    this.comp.$emit('scroll-lock', true)\n                    this.comp.$emit('object-selected')\n                }\n                break\n        }\n        if (this.hover()) {\n            event.preventDefault()\n        }\n    }\n\n    mouseup(event) {\n        switch (this.state) {\n            case 'dragging':\n                this.state = 'settled'\n                if (this.on_settled) this.on_settled()\n                this.comp.$emit('scroll-lock', false)\n                break\n        }\n    }\n\n    on(name, handler) {\n        switch (name) {\n            case 'settled':\n                this.on_settled = handler\n                break\n        }\n    }\n\n    hover() {\n        let x = this.x\n        let y = this.y\n        return (\n            (x - this.mouse.x) * (x - this.mouse.x) +\n            (y - this.mouse.y) * (y - this.mouse.y)\n        ) < this.RADIUS_SQ\n    }\n\n}\n","\n// Price bar & price line (shader)\n\nexport default class Price {\n\n    constructor(comp) {\n        this.comp = comp\n        this.data = comp.$props.data\n    }\n\n    // Defines an inline shader (has access to both\n    // target & overlay's contexts)\n    init_shader() {\n\n        let layout = this.comp.$props.layout\n        let config = this.comp.$props.config\n        let comp = this.comp\n        let last_bar = () => this.last_bar()\n\n        this.comp.$emit('new-shader', {\n            target: 'sidebar', draw: ctx => {\n\n                if (!last_bar()) return\n\n                let bar = last_bar()\n                let w = ctx.canvas.width\n                let h = config.PANHEIGHT\n                let lbl = bar.price.toFixed(layout.prec)\n                ctx.fillStyle = bar.color\n\n                let x = - 0.5\n                let y = bar.y - h * 0.5 - 0.5\n                let a = 7\n                ctx.fillRect(x - 0.5, y, w + 1, h)\n                ctx.fillStyle = comp.$props.colors.textHL\n                ctx.textAlign = 'left'\n                ctx.fillText(lbl, a, y + 15)\n\n            }\n        })\n        this.shader = true\n    }\n\n    // Regular draw call for overaly\n    draw(ctx) {\n        if (!this.comp.$props.meta.last) return\n        if (!this.shader) this.init_shader()\n\n        let layout = this.comp.$props.layout\n        let last = this.comp.$props.meta.last\n\n        let dir = last[4] >= last[1]\n        let color = dir ? this.green() : this.red()\n        let y = layout.$2screen(last[4]) + (dir ? 1 : 0)\n\n        ctx.strokeStyle = color\n        ctx.setLineDash([1, 1])\n        ctx.beginPath()\n        ctx.moveTo(0, y)\n        ctx.lineTo(layout.width, y)\n        ctx.stroke()\n        ctx.setLineDash([])\n    }\n\n    last_bar() {\n\n        if (!this.data.length) return undefined\n        let layout = this.comp.$props.layout\n        let last = this.data[this.data.length - 1]\n        let y = layout.$2screen(last[4])\n        let cndl = layout.c_magnet(last[0])\n        return {\n            y: Math.floor(cndl.c) - 0.5,\n            price: last[4],\n            color: last[4] >= last[1] ? this.green() : this.red()\n        }\n    }\n\n    last_price() {\n        return this.comp.$props.meta.last ?\n            this.comp.$props.meta.last[4] : undefined\n    }\n\n    green() {\n        return this.comp.colorCandleUp\n    }\n\n    red() {\n        return this.comp.colorCandleDw\n    }\n\n}\n","\n// Draws a ray, adds corresponding collision f-n\n\nimport Line from './line.js'\n\nexport default class Ray extends Line {\n    constructor(overlay, ctx) {\n        super(overlay, ctx)\n        this.ray = true\n    }\n}\n","\n// Draws a segment, adds corresponding collision f-n\n\nimport Math2 from '../../stuff/math.js'\nimport Utils from '../../stuff/utils.js'\n\nexport default class Seg {\n\n    // Overlay ref, canvas ctx\n    constructor(overlay, ctx) {\n        this.ctx = ctx\n        this.comp = overlay\n        this.T = overlay.$props.config.TOOL_COLL\n        if (Utils.is_mobile) this.T *= 2\n    }\n\n    // p1[t, $], p2[t, $] (time-price coordinates)\n    draw(p1, p2) {\n\n        const layout = this.comp.$props.layout\n\n        let x1 = layout.t2screen(p1[0])\n        let y1 = layout.$2screen(p1[1])\n        let x2 = layout.t2screen(p2[0])\n        let y2 = layout.$2screen(p2[1])\n\n        this.ctx.moveTo(x1, y1)\n        this.ctx.lineTo(x2, y2)\n\n        this.comp.collisions.push(\n            this.make([x1, y1], [x2, y2])\n        )\n    }\n\n    // Collision function. x, y - mouse coord.\n    make(p1, p2) {\n        return (x, y) => {\n            return Math2.point2seg(\n                [x, y], p1, p2\n            ) < this.T\n        }\n    }\n}\n","// Claculates postions and sizes for candlestick\n// and volume bars for the given subset of data\n\nimport Utils from '../../stuff/utils.js'\n\nexport function layout_cnv(self) {\n\n    let $p = self.$props\n    let sub = $p.data\n    let t2screen = $p.layout.t2screen\n    let layout = $p.layout\n\n    let candles = []\n    let volume = []\n\n    // The volume bar height is determined as a percentage of\n    // the chart's height (VOLSCALE)\n    let maxv = Math.max(...sub.map(x => x[5]))\n    let vs =  $p.config.VOLSCALE * layout.height / maxv\n    var x1, x2, w, avg_w, mid, prev = undefined\n\n    // Subset interval against main interval\n    var [interval2, ratio] = new_interval(layout, $p, sub)\n    let px_step2 = layout.px_step * ratio\n\n    let splitter = px_step2 > 5 ? 1 : 0\n\n    // A & B are current chart tranformations:\n    // A === scale,  B === Y-axis shift\n    for (var i = 0; i < sub.length; i++) {\n        let p = sub[i]\n        mid = t2screen(p[0]) + 1\n\n        // Clear volume bar if there is a time gap\n        if (sub[i-1] && p[0] - sub[i-1][0] > interval2) {\n            prev = null\n        }\n\n        x1 = prev || Math.floor(mid - px_step2 * 0.5)\n        x2 = Math.floor(mid + px_step2 * 0.5) - 0.5\n\n        // TODO: add log scale support\n        candles.push({\n            x: mid,\n            w: layout.px_step * $p.config.CANDLEW * ratio,\n            o: Math.floor(p[1] * layout.A + layout.B),\n            h: Math.floor(p[2] * layout.A + layout.B),\n            l: Math.floor(p[3] * layout.A + layout.B),\n            c: Math.floor(p[4] * layout.A + layout.B),\n            raw: p\n        })\n\n        volume.push({\n            x1: x1,\n            x2: x2,\n            h: p[5] * vs,\n            green: p[4] >= p[1],\n            raw: p\n        })\n        prev = x2 + splitter\n    }\n\n    return { candles, volume }\n\n}\n\nexport function layout_vol(self) {\n\n    let $p = self.$props\n    let sub = $p.data\n    let t2screen = $p.layout.t2screen\n    let layout = $p.layout\n\n    let volume = []\n\n    // Detect data second dimention size:\n    let dim = sub[0] ? sub[0].length : 0\n\n    // Support special volume data (see API book), or OHLCV\n    // Data indices:\n    self._i1 = dim < 6 ? 1 : 5\n    self._i2 = dim < 6 ? (p => p[2]) : (p => p[4] >= p[1])\n\n    let maxv = Math.max(...sub.map(x => x[self._i1]))\n    let volscale = self.volscale || $p.config.VOLSCALE\n    let vs = volscale * layout.height / maxv\n    var x1, x2, mid, prev = undefined\n\n    // Subset interval against main interval\n    var [interval2, ratio] = new_interval(layout, $p, sub)\n    let px_step2 = layout.px_step * ratio\n\n    let splitter = px_step2 > 5 ? 1 : 0\n\n    // A & B are current chart tranformations:\n    // A === scale,  B === Y-axis shift\n    for (var i = 0; i < sub.length; i++) {\n        let p = sub[i]\n        mid = t2screen(p[0]) + 1\n\n        // Clear volume bar if there is a time gap\n        if (sub[i-1] && p[0] - sub[i-1][0] > interval2) {\n            prev = null\n        }\n        x1 = prev || Math.floor(mid - px_step2 * 0.5)\n        x2 = Math.floor(mid + px_step2 * 0.5) - 0.5\n\n        volume.push({\n            x1: x1,\n            x2: x2,\n            h: p[self._i1] * vs,\n            green: self._i2(p),\n            raw: p\n        })\n        prev = x2 + splitter\n    }\n    return volume\n\n}\n\nfunction new_interval(layout, $p, sub) {\n    // Subset interval against main interval\n    if (!layout.ti_map.ib) {\n        var interval2 = $p.tf || Utils.detect_interval(sub)\n        var ratio = interval2 / $p.interval\n    } else {\n        if ($p.tf) {\n            var ratio = $p.tf / layout.ti_map.tf\n            var interval2 = ratio\n        } else {\n            var interval2 = Utils.detect_interval(sub)\n            var ratio = interval2 / $p.interval\n        }\n    }\n    return [interval2, ratio]\n}\n","import TradingVue from './TradingVue.vue'\nimport DataCube from './helpers/datacube.js'\nimport Overlay from './mixins/overlay.js'\nimport Tool from './mixins/tool.js'\nimport Interface from './mixins/interface.js'\nimport Utils from './stuff/utils.js'\nimport Constants from './stuff/constants.js'\nimport Candle from './components/primitives/candle.js'\nimport Volbar from './components/primitives/volbar.js'\nimport Line from './components/primitives/line.js'\nimport Pin from './components/primitives/pin.js'\nimport Price from './components/primitives/price.js'\nimport Ray from './components/primitives/ray.js'\nimport Seg from './components/primitives/seg.js'\n\nimport { layout_cnv, layout_vol } from\n    './components/js/layout_cnv.js'\n\nconst primitives = {\n    Candle, Volbar, Line, Pin, Price, Ray, Seg\n}\n\nTradingVue.install = function (Vue) {\n    Vue.component(TradingVue.name, TradingVue)\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(TradingVue)\n    window.TradingVueLib = {\n        TradingVue, Overlay, Utils, Constants,\n        Candle, Volbar, layout_cnv, layout_vol,\n        DataCube, Tool, Interface, primitives\n    }\n}\n\nexport default TradingVue\n\nexport {\n    TradingVue, Overlay, Utils, Constants,\n    Candle, Volbar, layout_cnv, layout_vol,\n    DataCube, Tool, Interface, primitives\n}\n"],"sourceRoot":""}